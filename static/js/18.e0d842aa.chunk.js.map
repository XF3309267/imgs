{"version":3,"sources":["views/User/UserShareParts/index.js"],"names":["tittleDisplayMap","part_id","part_title","part_img","part_url","UserShareParts","createColumns","columnKeys","columns","map","item","title","key","render","record","url","alt","dataIndex","push","Width","size","type","getData","setState","isLoading","getHandleShare","then","resp","console","log","Object","keys","data","dataSource","showDataSource","catch","err","finally","toExcel","state","i","length","ws","XLSX","utils","aoa_to_sheet","wb","book_new","book_append_sheet","writeFile","offset","limited","moment","format","toUpload","props","history","total","this","className","bordered","extra","icon","shape","onClick","pagination","current","pageSize","loading","rowKey","hideOnSinglePage","onChange","onPageChange","showQuickJumper","showSizeChanger","onShowSizeChange","Component"],"mappings":"oZAUMA,G,OAAmB,CACrBC,QAAQ,KACRC,WAAW,eACXC,SAAS,eACTC,SAAS,iBAUQC,E,kDACjB,aAAc,IAAD,8BACT,gBAeJC,cAAgB,SAACC,GACb,IAAMC,EAAUD,EAAWE,KAAI,SAAAC,GAC7B,MAAY,aAATA,EAEK,CACJC,MAAMX,EAAiBU,GACvBE,IAAIF,EACJG,OAAO,SAACC,GACN,OAAO,yBAAKC,IAAKD,EAAOX,SAAWa,IAAI,+BAIvC,CACJL,MAAMX,EAAiBU,GACvBO,UAAUP,EAIVE,IAAIF,MAgBR,OAbAF,EAAQU,KAAK,CACXP,MAAM,eACNC,IAAI,SACJO,MAAO,QACPN,OAAO,SAACC,GACN,OACE,6BACE,uBAAQM,KAAK,QAAQC,KAAK,WAA1B,iBACA,uBAAQD,KAAK,QAAQC,KAAK,UAA1B,qBAKDb,GAlDE,EAqDbc,QAAU,WACN,EAAKC,SAAS,CACZC,WAAU,IAEZC,cACCC,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZ,IAAMpB,EAAauB,OAAOC,KAAKJ,EAAKK,KAAK,IACnCxB,EAAU,EAAKF,cAAcC,GACnC,EAAKgB,SAAS,CACZU,WAAWN,EAAKK,KAChBE,eAAeP,EAAKK,KACpBxB,eAED2B,OAAM,SAAAC,OAENC,SAAQ,SAAAD,GACT,EAAKb,SAAS,CACZC,WAAU,QAvEL,EAgFXc,QAAU,WAER,IADA,IAAMN,EAAM,CAACF,OAAOC,KAAK,EAAKQ,MAAMN,WAAW,KACtCO,EAAI,EAAGA,EAAI,EAAKD,MAAMN,WAAWQ,OAAQD,IAE9CR,EAAKd,KAAK,CACR,EAAKqB,MAAMN,WAAWO,GAAGvC,QACzB,EAAKsC,MAAMN,WAAWO,GAAGtC,WACzB,EAAKqC,MAAMN,WAAWO,GAAGrC,SACzB,EAAKoC,MAAMN,WAAWO,GAAGpC,WAI/B,IAAMsC,EAAKC,IAAKC,MAAMC,aAAab,GAC7Bc,EAAKH,IAAKC,MAAMG,WACtBJ,IAAKC,MAAMI,kBAAkBF,EAAIJ,EAAI,WACrCC,IAAKM,UAAUH,EAAf,oBAAgC,EAAKP,MAAMW,OAAS,EAAKX,MAAMY,QAAU,EAAzE,YAA8EC,MAASC,OAAO,kBAA9F,WA/FS,EAiGXC,SAAW,WACT,EAAKC,MAAMC,QAAQtC,KAAK,iCAhGxB,EAAKqB,MAAO,CACVL,eAAe,GACfD,WAAW,GACXzB,QAAQ,GACRiD,MAAM,EACNjC,WAAU,EACV0B,OAAO,EACPC,QAAQ,IATD,E,gEA4ETO,KAAKpC,Y,+BA0BL,OACI,uBACAqC,UAAU,aACVC,UAAU,EACVC,MACA,yBAAKF,UAAU,IACb,uBAAStC,KAAK,WAAd,6BADF,SAGE,uBAAQyC,KAAM,kBAAC,IAAD,MAAoBC,MAAM,QAAQC,QAASN,KAAKJ,UAA9D,iBAHF,SAKE,uBAAQQ,KAAM,kBAAC,IAAD,MAAsBE,QAASN,KAAKpB,SAAlD,iBAGF2B,WAAY,CAERC,QAAQR,KAAKnB,MAAMW,OAASQ,KAAKnB,MAAMY,QAAS,EAChDgB,SAAS,IAGd,uBACCC,QAASV,KAAKnB,MAAMf,UACpB6C,OAAU,SAAAvD,GAAM,OAAIA,EAAOb,SAC3BgC,WAAYyB,KAAKnB,MAAML,eACvB1B,QAASkD,KAAKnB,MAAM/B,QACpByD,WAAY,CACVC,QAAQR,KAAKnB,MAAMW,OAASQ,KAAKnB,MAAMY,QAAS,EAChDM,MAAMC,KAAKnB,MAAMkB,MACjBa,kBAAiB,EACjBC,SAAUb,KAAKc,aACfC,iBAAgB,EAChBC,iBAAgB,EAChBC,iBAAiBjB,KAAKiB,kBAEvBhB,UAAU,qB,GAxIqBiB","file":"static/js/18.e0d842aa.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport { Card,Button,Table ,Tag,Modal,Typography, message } from 'antd';\r\nimport {getHandleCapsule,getHandleShare,getHandleArtifact} from '../../../services'\r\nimport {DownloadOutlined,UploadOutlined} from '@ant-design/icons'\r\nimport moment from 'moment'\r\nimport XLSX from 'xlsx'\r\n\r\nimport '../UserManageInfo/userManage.less'\r\n\r\nconst tittleDisplayMap = {\r\n    part_id:'id',\r\n    part_title:'标题',\r\n    part_img:'图片',\r\n    part_url:'链接',\r\n    // artifact_info:'信息',\r\n    // artifact_url:'链接'\r\n  \r\n  //   author:'作者',\r\n  //   createAt:'创建时间',\r\n  //   amount:'阅读量'\r\n  }\r\n\r\n\r\nexport default class UserShareParts extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state= {\r\n          showDataSource:[],\r\n          dataSource:[],\r\n          columns:[],\r\n          total:0,\r\n          isLoading:false,\r\n          offset:0,\r\n          limited:10,\r\n          // deleteArticleTitle:'',\r\n          // isShowArticleModal:false,\r\n          // deleteArticleConfirmLoading: false,\r\n          // currentDeleteArticleID:null,\r\n        }\r\n    }\r\n    createColumns = (columnKeys)=>{\r\n        const columns = columnKeys.map(item=>{\r\n          if(item === 'part_img'){\r\n            // console.log('tittleDisplayMap[item]: ',tittleDisplayMap[item])\r\n            return{\r\n              title:tittleDisplayMap[item],\r\n              key:item,\r\n              render:(record)=>{\r\n                return <img url={record.part_img}  alt='暂无图片' />\r\n              }\r\n            }\r\n          }\r\n          return{\r\n            title:tittleDisplayMap[item],\r\n            dataIndex:item,\r\n            //  dataIndex 属性，表示 数据的key（因为传过来的数据是一个对象，键值对的形式） 与  dataIndex 的值 相对应的 value会在该列显示\r\n            // 当然你也可以不用，而直接使用  render 方法，render 方法接收一个  record 参数\r\n            // record 表示，\r\n            key:item,\r\n          }\r\n        })\r\n        columns.push({\r\n          title:'操作',\r\n          key:'action',\r\n          Width: '100px',\r\n          render:(record)=>{\r\n            return (\r\n              <div >\r\n                <Button size='small' type=\"primary\" > 编辑</Button>\r\n                <Button size=\"small\" type=\"danger\" > 删除</Button>\r\n              </div>\r\n            )\r\n          }\r\n        })\r\n        return columns\r\n    }\r\n\r\n    getData = ()=>{\r\n        this.setState({\r\n          isLoading:true\r\n        })\r\n        getHandleShare()\r\n        .then(resp =>{\r\n          console.log(resp)\r\n          const columnKeys = Object.keys(resp.data[0])\r\n          const columns = this.createColumns(columnKeys);\r\n          this.setState({\r\n            dataSource:resp.data,\r\n            showDataSource:resp.data,\r\n            columns,\r\n          })\r\n        }).catch(err=>{\r\n  \r\n        }).finally(err =>{\r\n          this.setState({\r\n            isLoading:false\r\n          })\r\n        })\r\n      }\r\n      componentDidMount(){\r\n        this.getData()\r\n        \r\n      }\r\n  \r\n      toExcel = ()=>{\r\n        const data =[Object.keys(this.state.dataSource[0])]\r\n        for (let i = 0; i < this.state.dataSource.length; i++) {\r\n          // const values = Object.values(this.state.dataSource[i])\r\n            data.push([\r\n              this.state.dataSource[i].part_id,\r\n              this.state.dataSource[i].part_title,\r\n              this.state.dataSource[i].part_img,\r\n              this.state.dataSource[i].part_url\r\n              // moment(this.state.dataSource[i].createAt).format('YYYY-MM-DD HH:mm:ss')\r\n            ])\r\n        }\r\n        const ws = XLSX.utils.aoa_to_sheet(data);\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, ws, \"SheetJS\");\r\n        XLSX.writeFile(wb, `articlesAt${this.state.offset / this.state.limited + 1}-${moment().format('YYYYMMDDHHmmss')}.xlsx`)\r\n      }\r\n      toUpload = ()=>{\r\n        this.props.history.push('/admin/info/sharePart/upload')\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <Card  \r\n            className=\"myUserCard\"\r\n            bordered={false} \r\n            extra={\r\n            <div className=\"\">\r\n              <Button  type=\"primary\" > 阅读模式</Button>\r\n                &emsp;\r\n              <Button icon={<UploadOutlined />} shape=\"round\" onClick={this.toUpload}> 上传</Button>\r\n                &emsp;\r\n              <Button icon={<DownloadOutlined />} onClick={this.toExcel}>导出</Button>\r\n            </div>\r\n          } \r\n            pagination={{\r\n                // total:50\r\n                current:this.state.offset / this.state.limited +1,\r\n                pageSize:1\r\n            }}\r\n        >\r\n           <Table \r\n            loading={this.state.isLoading}\r\n            rowKey = {record => record.part_id}\r\n            dataSource={this.state.showDataSource} \r\n            columns={this.state.columns} \r\n            pagination={{\r\n              current:this.state.offset / this.state.limited +1,\r\n              total:this.state.total,\r\n              hideOnSinglePage:false,\r\n              onChange: this.onPageChange,\r\n              showQuickJumper:true,\r\n              showSizeChanger:true,\r\n              onShowSizeChange:this.onShowSizeChange,\r\n             }}\r\n             className=\"myUserTable\"\r\n            />\r\n          </Card>\r\n        )\r\n    }\r\n}\r\n"],"sourceRoot":""}