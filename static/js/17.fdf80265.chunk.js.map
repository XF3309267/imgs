{"version":3,"sources":["views/User/UserArtifact/index.js"],"names":["tittleDisplayMap","artifact_id","artifact_title","artifact_name","artifact_img","artifact_info","artifact_url","UserArtifact","Group","withRouter","createColumns","columnKeys","columns","map","item","title","key","render","record","text","url","alt","dataIndex","push","Width","size","type","deleteSomeKeys","keys","i","length","splice","indexOf","getData","setState","isLoading","getHandleArtifact","then","resp","Object","data","dataSource","showDataSource","total","catch","err","finally","toExcel","state","ws","XLSX","utils","aoa_to_sheet","wb","book_new","book_append_sheet","writeFile","offset","limited","moment","format","toUpload","props","history","onPageChange","page","pageSize","infoStart","infoEnd","showData","slice","onShowSizeChange","current","this","className","bordered","extra","icon","shape","onClick","pagination","loading","rowKey","hideOnSinglePage","onChange","showQuickJumper","showSizeChanger","Component"],"mappings":"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","file":"static/js/17.fdf80265.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport { Card,Button,Table} from 'antd';\r\nimport { Form} from '@ant-design/compatible';\r\nimport {DownloadOutlined,UploadOutlined} from '@ant-design/icons'\r\nimport '@ant-design/compatible/assets/index.css';\r\n\r\nimport moment from 'moment'\r\nimport XLSX from 'xlsx'\r\nimport { withRouter } from 'react-router'\r\n \r\nimport {getHandleArtifact} from '../../../services'\r\n\r\nimport '../UserManageInfo/userManage.less'\r\nconst tittleDisplayMap = {\r\n  artifact_id:'id',\r\n  artifact_title:'标题',\r\n  artifact_name:'名称',\r\n  artifact_img:'图片',\r\n  artifact_info:'信息',\r\n  artifact_url:'链接'\r\n\r\n//   author:'作者',\r\n//   createAt:'创建时间',\r\n//   amount:'阅读量'\r\n}\r\nconst ButtonGroup = Button.Group;\r\n@withRouter\r\nclass UserArtifact extends Component {\r\n\r\n    constructor(){\r\n      super()\r\n      this.state= {\r\n        showDataSource:[],\r\n        dataSource:[],\r\n        columns:[],\r\n        total:0,\r\n        isLoading:false,\r\n        offset:0,     //  每页 第一行数据的标\r\n        limited:10,   //  每页条数\r\n        // deleteArticleTitle:'',\r\n        // isShowArticleModal:false,\r\n        // deleteArticleConfirmLoading: false,\r\n        // currentDeleteArticleID:null,\r\n      }\r\n    }\r\n\r\n    createColumns = (columnKeys)=>{\r\n      const columns = columnKeys.map(item=>{\r\n        // if(item==='artifact_id'){\r\n        //   return null;\r\n        // }\r\n        if(item === 'artifact_img'){\r\n          return{\r\n            title:'图片',\r\n            key:item,\r\n            render:(record,text)=>{\r\n              return <img url={record.artifact_img}  alt='暂无图片' />\r\n            }\r\n          }\r\n        }\r\n        return{\r\n          title:tittleDisplayMap[item],\r\n          dataIndex:item,\r\n          //  dataIndex 属性，表示 数据的key（因为传过来的数据是一个对象，键值对的形式） 与  dataIndex 的值 相对应的 value会在该列显示\r\n          // 当然你也可以不用，而直接使用  render 方法，render 方法接收一个  record 参数\r\n          // record 表示，\r\n          key:item,\r\n        }\r\n      })\r\n      columns.push({\r\n        title:'操作',\r\n        key:'action',\r\n        Width: '100px',\r\n        render:(record)=>{\r\n          return (\r\n            <>\r\n              <Button size='small' type=\"primary\" > 编辑</Button>\r\n              <Button size=\"small\" type=\"danger\" > 删除</Button>\r\n            </>\r\n          )\r\n        }\r\n      })\r\n      return columns\r\n    }\r\n   \r\n    deleteSomeKeys =  (columnKeys,keys)=>{\r\n      let columns = columnKeys;\r\n      for (let i = 0; i < keys.length; i++) {\r\n        columnKeys.splice(columnKeys.indexOf(keys[i]),1)\r\n      }\r\n      return columns;\r\n    }\r\n    getData = ()=>{\r\n      this.setState({\r\n        isLoading:true\r\n      })\r\n      getHandleArtifact()\r\n      .then(resp =>{\r\n        let columnKeys = Object.keys(resp.data[0])\r\n        columnKeys = this.deleteSomeKeys(columnKeys,['artifact_img','artifact_content'])\r\n        const columns = this.createColumns(columnKeys);\r\n        const keys = Object.keys(resp.data);\r\n        this.setState({\r\n          dataSource:resp.data,\r\n          showDataSource:resp.data,\r\n          columns,\r\n          total: keys.length,\r\n        })\r\n      }).catch(err=>{\r\n\r\n      }).finally(err =>{\r\n        this.setState({\r\n          isLoading:false\r\n        })\r\n      })\r\n    }\r\n\r\n    componentDidMount(){\r\n      this.getData()\r\n      \r\n    }\r\n\r\n    toExcel = ()=>{\r\n      const data =[Object.keys(this.state.dataSource[0])]\r\n      for (let i = 0; i < this.state.dataSource.length; i++) {\r\n        // const values = Object.values(this.state.dataSource[i])\r\n          data.push([\r\n            this.state.dataSource[i].artifact_id,\r\n            this.state.dataSource[i].artifact_title,\r\n            this.state.dataSource[i].artifact_name,\r\n            this.state.dataSource[i].artifact_url,\r\n            // this.state.dataSource[i].artifact_img,\r\n            this.state.dataSource[i].artifact_info,\r\n            // moment(this.state.dataSource[i].createAt).format('YYYY-MM-DD HH:mm:ss')\r\n          ])\r\n      }\r\n      const ws = XLSX.utils.aoa_to_sheet(data);\r\n      const wb = XLSX.utils.book_new();\r\n      XLSX.utils.book_append_sheet(wb, ws, \"SheetJS\");\r\n      XLSX.writeFile(wb, `articlesAt${this.state.offset / this.state.limited + 1}-${moment().format('YYYYMMDDHHmmss')}.xlsx`)\r\n    }\r\n\r\n    toUpload = ()=>{\r\n        this.props.history.push('/admin/info/artifact/upload')\r\n    }\r\n\r\n    onPageChange = (page,pageSize)=>{\r\n      this.setState({\r\n        offset:pageSize*(page-1),\r\n        limited:pageSize\r\n      },()=>{\r\n        const infoStart = this.state.offset\r\n        const infoEnd = (this.state.offset+this.state.limited+1)>this.state.dataSource.length ? this.state.dataSource.length : (this.state.offset+this.state.limited)\r\n        const showData = this.state.dataSource.slice(infoStart,infoEnd)\r\n        this.setState({\r\n          showDataSource:showData\r\n        })\r\n      })\r\n    }\r\n\r\n    onShowSizeChange = (current,size)=>{\r\n      this.setState({\r\n        offset:0,\r\n        limited:size\r\n      },()=>{\r\n        this.getData()\r\n      })\r\n    }\r\n   \r\n    render() {\r\n        return (\r\n        <Card  \r\n           className='myUserCard'\r\n            bordered={false} \r\n            extra={\r\n              <div className=\"\">\r\n                <Button  type=\"primary\" > 阅读模式</Button>\r\n                  &emsp;\r\n                <Button icon={<UploadOutlined />} shape=\"round\" onClick={this.toUpload}> 上传</Button>\r\n                  &emsp;\r\n                <Button icon={<DownloadOutlined />} onClick={this.toExcel}>导出</Button>\r\n              </div>\r\n          } \r\n            pagination={{\r\n                current:this.state.offset / this.state.limited +1,\r\n                pageSize:1\r\n            }}\r\n        >\r\n           <Table \r\n            loading={this.state.isLoading}\r\n            rowKey = {record => record.artifact_id}\r\n            dataSource={this.state.showDataSource} \r\n            columns={this.state.columns} \r\n            pagination={{\r\n              current:this.state.offset / this.state.limited +1,\r\n              total:this.state.total,\r\n              hideOnSinglePage:false,\r\n              onChange: this.onPageChange,\r\n              showQuickJumper:true,\r\n              showSizeChanger:true,\r\n              onShowSizeChange:this.onShowSizeChange,\r\n             }}\r\n             className='myUserTable'\r\n            />\r\n            {/* <Modal\r\n              size='small'\r\n              title='此操作不可逆，请谨慎执行'\r\n              visible={this.state.isShowArticleModal}\r\n              onCancel={this.hideDeleteModal}\r\n              confirmLoading={this.state.deleteArticleConfirmLoading}\r\n              onOk={this.deleteArticle}\r\n            >\r\n              <Typography>  确定要删除 <span style={{color:'#f00'}}> {this.state.deleteArticleTitle} </span> 吗？</Typography>\r\n            </Modal> */}\r\n          </Card>\r\n\r\n        )\r\n    }\r\n}\r\nexport default  UserArtifact\r\n"],"sourceRoot":""}