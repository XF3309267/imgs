{"version":3,"sources":["views/stduioDynamic/function/someFun.js","views/stduioDynamic/StduioWorks/index.js"],"names":["getNowPath","pathname","smNav","detRoute","substr","split","shift","length","nav","detailRoute","StduioWorks","withRouter","getData","setState","isLoading","getHandleArtifact","then","resp","dataSource","data","catch","err","finally","detailClick","id","props","history","push","getRoute","routeArr","location","smNavdata","navData","nowData","state","mainImgData","imgUrl","smImgUrl","headTitle","imgHeight","this","className","map","item","key","artifact_id","onClick","bind","src","artifact_img","alt","style","minHeight","Component"],"mappings":"iHAAA,sCAAMA,EAAa,SAACC,GAChB,IAAIC,EAAQ,GAERC,EAAW,GAWf,OAVAD,EAFiBD,EAEAG,OAAO,GAAGC,MAAM,MAC3BC,QACa,IAAhBJ,EAAMK,SACLJ,EAAWF,EACXC,EAAMK,OAAS,GAEH,CACZC,IAAKN,EACLO,YAAaN,K,yJCDfO,G,OADLC,Y,oDAEG,aAAc,IAAD,8BACT,gBAqBJC,QAAU,WACN,EAAKC,SAAS,CACZC,WAAU,IAEZC,cACCC,MAAK,SAAAC,GACH,EAAKJ,SAAS,CACVK,WAAWD,EAAKE,UAEpBC,OAAM,SAAAC,OAENC,SAAQ,SAAAD,GACT,EAAKR,SAAS,CACZC,WAAU,QAnCL,EA8CbS,YAAc,SAACC,GACX,EAAKC,MAAMC,QAAQC,KAAnB,gDAAiEH,KA/CxD,EAkDbI,SAAW,WACP,IAAMC,EAAW7B,YAAW,EAAKyB,MAAMC,QAAQI,SAAS7B,UACxD,EAAKY,SAAS,CACVkB,UAAU,CACNC,QAAQH,EAASrB,IACjByB,QAAQJ,EAASpB,gBArDzB,EAAKyB,MAAM,CACPhB,WAAW,GACXJ,WAAU,EACVqB,YAAa,CACTC,OAAQ,qCACRC,SAAU,8BACVC,UAAW,iCACXC,UAAW,SAEfR,UAAU,CACNC,QAAQ,GACRC,QAAQ,KAbP,E,gEAmBTO,KAAK5B,UACL4B,KAAKZ,a,+BAuCC,IAAD,OACL,OACI,yBAAKa,UAAU,IACX,kBAAC,IAAYD,KAAKN,MAAMC,aACxB,kBAAC,IAAD,CAAUJ,UAAWS,KAAKN,MAAMH,YAChC,yBAAKU,UAAU,oCAMX,yBAAKA,UAAU,8BAEPD,KAAKN,MAAMhB,WAAWwB,KAAI,SAAAC,GACtB,OACI,yBAAKF,UAAU,qCAAqCG,IAAKD,EAAKE,YAAaC,QAAS,EAAKvB,YAAYwB,KAAKJ,EAAKA,EAAKE,cAChH,yBAAKJ,UAAU,kDACX,yBAAMO,IAAKL,EAAKM,aAAaN,EAAKM,aAAa,kBAAmBR,UAAU,eAAeS,IAAI,QAC/F,yBAAKT,UAAU,iBACX,uBAAGA,UAAU,wBAAwBU,MAAO,CAACC,UAAU,QAAvD,yC,GA/EtBC,e,GA+FX3C","file":"static/js/19.631734fc.chunk.js","sourcesContent":["const getNowPath = (pathname)=>{\r\n    var smNav = []\r\n    const location = pathname\r\n    var detRoute = ''\r\n    smNav = location.substr(1).split('/')\r\n    smNav.shift()\r\n    if(smNav.length ===3){   //  说明有 详细路由的存在\r\n        detRoute = pathname\r\n        smNav.length = 2\r\n    }\r\n    const navData = {\r\n        nav: smNav,\r\n        detailRoute: detRoute\r\n    }\r\n    return navData\r\n}\r\n\r\nexport {\r\n    getNowPath\r\n}","import React, { Component } from 'react'\r\n\r\nimport {withRouter,Link} from 'react-router-dom'\r\nimport {Icon} from 'antd'\r\nimport {getHandleArtifact} from '../../../services'\r\nimport MainImg  from '../../Home/MainImg'\r\nimport  {SmallNav} from '../../../components'\r\nimport {getNowPath} from '../function/someFun'\r\nimport './stduioWorks.less'\r\n\r\n@withRouter\r\nclass StduioWorks extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            dataSource:[],\r\n            isLoading:false,\r\n            mainImgData: {\r\n                imgUrl: 'url(\"../image/brief/artifact.jpg\")',\r\n                smImgUrl: 'url(\"../image/titleSM.jpg\")',\r\n                headTitle: '工作室作品',\r\n                imgHeight: '20rem'\r\n            },\r\n            smNavdata:{\r\n                navData:[],\r\n                nowData:''\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getData()\r\n        this.getRoute()\r\n    }\r\n    getData = ()=>{\r\n        this.setState({\r\n          isLoading:true\r\n        })\r\n        getHandleArtifact()\r\n        .then(resp =>{  \r\n           this.setState({\r\n               dataSource:resp.data\r\n           })\r\n        }).catch(err=>{\r\n         \r\n        }).finally(err =>{\r\n          this.setState({\r\n            isLoading:false\r\n          })\r\n        })\r\n      }\r\n    //   说明思路：  getNowPath  方法 获得当前的 location ，\r\n    //   并将其  如这样的‘/info/capsules/2342’  拆分为  ‘info’   ‘capsules’   ‘2342’\r\n    //   暂时  对于  第三个路由名  是由第二个的  路由名  决定的\r\n    //   1： 使用  字符串 拆分  split('/') 对字符串进行 拆分为数组 并去除第一个 元素，后赋值给  routeArr\r\n    //   2： 判断数组的  length 是否是 3，若果是 3 ： 就使用  字符串拼接   routeArr[2] ='detail'+ routeArr[1]  \r\n    //  \r\n\r\n    detailClick = (id)=>{\r\n        this.props.history.push(`/info/stduioWorks/detailestduioWorks/:${id}`)\r\n    }\r\n\r\n    getRoute = ()=>{\r\n        const routeArr = getNowPath(this.props.history.location.pathname)\r\n        this.setState({\r\n            smNavdata:{\r\n                navData:routeArr.nav,\r\n                nowData:routeArr.detailRoute,\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <MainImg {...this.state.mainImgData} />\r\n                <SmallNav smNavdata={this.state.smNavdata}  />\r\n                <div className=\" mt-4 mb-4 contanier works-color\">\r\n                    {/* <div className=\"my-font  row  pl-5 p-4 bg-light\" >\r\n                            <h2 className=\"h-title p-2\">\r\n                            工作室作品\r\n                            </h2>\r\n                    </div> */}\r\n                    <div className=\"dynamicContent row p-md-5 \" >\r\n                        {\r\n                            this.state.dataSource.map(item=>{\r\n                                return(\r\n                                    <div className=\"col-12 col-sm-6 col-md-4 col-lg-3 \" key={item.artifact_id} onClick={this.detailClick.bind(item,item.artifact_id)} >\r\n                                        <div className=\"card border-0   ml-auto mr-auto mb-4 my-card  \" >\r\n                                            <img  src={item.artifact_img?item.artifact_img:'../image/01.jpg'} className=\"card-img-top\" alt=\"...\" />\r\n                                            <div className=\"card-body p-3\" >\r\n                                                <p className=\"card-text text-center\" style={{minHeight:'1em'}}>\r\n                                                    {/* {item.artifact_name}  */}\r\n                                                    敬请期待\r\n                                                </p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default StduioWorks\r\n"],"sourceRoot":""}