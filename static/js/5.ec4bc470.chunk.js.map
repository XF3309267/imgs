{"version":3,"sources":["../node_modules/wangeditor/release/wangEditor.js"],"names":["module","exports","isDOMList","selector","HTMLCollection","NodeList","eventList","DomElement","this","nodeType","selectorResult","Array","replace","trim","indexOf","html","div","document","createElement","innerHTML","children","createElemByHTML","result","querySelectorAll","length","i","$","prototype","constructor","forEach","fn","elem","call","clone","deep","cloneList","push","cloneNode","get","index","first","last","on","type","types","split","addEventListener","e","target","matches","off","removeEventListener","attr","key","val","getAttribute","setAttribute","addClass","className","arr","filter","item","join","removeClass","css","currentStyle","style","resultArr","map","show","hide","childNodes","append","$children","child","appendChild","remove","parent","parentElement","removeChild","isContain","$child","contains","getSizeData","getBoundingClientRect","getNodeName","nodeName","find","text","value","focus","parentUntil","_currentElem","results","equal","$elem","insertBefore","referenceNode","parentNode","insertAfter","lastChild","nextSibling","offAll","config","menus","fontNames","colors","emotions","title","content","alt","src","zIndex","debug","linkCheck","link","linkImgCheck","pasteFilterStyle","pasteIgnoreImg","pasteTextHandle","showLinkImg","linkImgCallback","url","uploadImgMaxSize","uploadImgShowBase64","uploadFileName","uploadImgParams","uploadImgHeaders","withCredentials","uploadImgTimeout","uploadImgHooks","before","xhr","editor","files","success","fail","error","timeout","qiniu","UA","_ua","navigator","userAgent","isWebkit","test","isIE","window","objForEach","obj","hasOwnProperty","arrForEach","fakeArr","getRandom","prefix","Math","random","toString","slice","replaceHtmlSymbol","isFunction","Bold","_active","onClick","isSeleEmpty","selection","isSelectionEmpty","createEmptyRange","cmd","do","collapseRange","restoreSelection","tryChangeActive","queryCommandState","replaceLang","str","langArgs","reg","_emptyFn","DropList","menu","opt","_this","$container","$title","titleHtml","list","$list","elemHtml","$li","hideTimeoutId","setTimeout","_rendered","_show","Head","droplist","width","_command","FontSize","FontName","fontName","clearTimeout","$menuELem","menuHeight","height","showTimeoutId","$selectionElem","getSelectionContainerElem","$textElem","cmdValue","queryCommandValue","emptyFn","_isCreatedPanelMenus","Panel","Link","Italic","Redo","StrikeThrough","Underline","Undo","List","Justify","ForeColor","color","BackColor","Quote","Code","Emoticon","Table","Video","Image","imgMenuId","$body","$textContainerElem","$closeBtn","$tabTitleContainer","$tabContentContainer","tabs","tabTitleArr","tabContentArr","tab","tabIndex","tpl","$content","_index","stopPropagation","events","event","$inputs","_hideOtherPanels","panel","$linkelem","createRangeByElem","_createPanel","getSelectionText","inputLinkId","inputTextId","btnOkId","btnDelId","delBtnDisplay","$link","$text","_insertLink","_delLink","selectionText","checkResult","alert","$selectionELem","$parent","$startElem","getSelectionStartElem","$endElem","getSelectionEndElem","$code","textId","btnId","_insertCode","_updateCode","$parentElem","tabConfig","emotData","emotType","faceHtml","$target","insertHtml","_insert","emotHtml","_createEditPanel","_createInsertPanel","btnInsertId","textRowNum","textColNum","rowNum","parseInt","colNum","r","c","_this2","addRowBtnId","addColBtnId","delRowBtnId","delColBtnId","delTableBtnId","_addRow","_addCol","_delRow","_delCol","_delTable","_getLocationData","$tr","$tds","tdLength","td","$trs","trLength","tr","locationData","$currentTr","newTr","trData","tdIndex","$currentTd","name","toLowerCase","$table","textValId","width30","width50","width100","delBtn","$img","_selectedImg","uploadImg","upTriggerId","upFileId","linkUrlId","linkBtnId","tabsConfig","fileElem","click","fileList","insertLinkImg","tabsConfigResult","uploadImgServer","customUploadImg","FileReader","MenuConstructors","Menus","getPasteText","clipboardData","originalEvent","getData","Text","Command","API","_currentRange","Progress","_time","_isShow","_isRender","_timeoutId","$textContainer","$bar","bold","head","fontSize","italic","redo","strikeThrough","underline","undo","justify","foreColor","backColor","quote","code","emoticon","table","video","image","init","menuKey","MenuConstructor","_addToToolbar","_bindEvent","$toolbarElem","getRange","changeActive","clear","initSelection","getJSON","getChildrenJSON","curElem","elemResult","textContent","tag","attrData","attrList","attributes","attrListLength","attrs","_saveRangeRealTime","_enterKeyHandle","_clearHandle","_pasteHandle","_tabHandle","_imgHandle","_dragHandle","saveRange","insertEmptyP","$p","keyCode","pHandle","selectionNodeName","parentNodeName","queryCommandSupported","_willBreakCode","preventDefault","_startOffset","startOffset","codeLength","codeHandle","txtHtml","ignoreImg","pasteTime","canDo","now","Date","flag","pasteHtml","filterStyle","pasteText","docSplitHtml","getPasteHtml","ex","pasteFiles","items","getAsFile","getPasteImgs","dataTransfer","_useStyleWithCSS","execCommand","_name","_execCommand","change","_insertHTML","range","insertNode","deleteContents","pasteHTML","_insertElem","_range","getSelection","rangeCount","getRangeAt","$containerElem","toStart","collapse","commonAncestorContainer","startContainer","endContainer","endOffset","removeAllRanges","addRange","setEnd","isContent","createRange","selectNodeContents","selectNode","progress","timeoutId","_hide","_typeof","Symbol","iterator","UploadImg","_alert","alertInfo","debugInfo","customAlert","Error","img","onload","callback","onerror","onabort","_this3","maxSize","maxSizeM","maxLength","uploadImgMaxLength","uploadImgParamsWithUrl","hooks","resultFiles","errInfo","file","size","bind","formdata","FormData","uploadImgServerArr","uploadImgServerHash","XMLHttpRequest","open","ontimeout","upload","onprogress","percent","progressBar","lengthComputable","loaded","total","onreadystatechange","readyState","status","responseText","JSON","parse","customInsert","errno","data","beforeResult","prevent","msg","setRequestHeader","send","reader","readAsDataURL","editorId","Editor","toolbarSelector","textSelector","id","customConfig","_initConfig","Object","assign","langConfig","lang","RegExp","_initDom","$toolbarSelector","config$$1","toolbarElemId","textElemId","compositionEnd","onfocus","onblur","isFocus","isChild","isToolbar","isMenu","_initCommand","_initSelectionAPI","_initUploadImg","_initMenus","_initText","txt","newLine","$last","onChangeTimeoutId","beforeChangeHtml","onchangeTimeout","onchange","currentHtml","create","_offAllEvent","varArgs","TypeError","to","arguments","nextSource","nextKey","Element","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","ownerDocument","getElementsByTagName","wangEditor","factory"],"mappings":"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","file":"static/js/5.ec4bc470.chunk.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.wangEditor = factory());\n}(this, (function () { 'use strict';\n\n/*\n    poly-fill\n*/\n\nvar polyfill = function () {\n\n    // Object.assign\n    if (typeof Object.assign != 'function') {\n        Object.assign = function (target, varArgs) {\n            // .length of function is 2\n            if (target == null) {\n                // TypeError if undefined or null\n                throw new TypeError('Cannot convert undefined or null to object');\n            }\n\n            var to = Object(target);\n\n            for (var index = 1; index < arguments.length; index++) {\n                var nextSource = arguments[index];\n\n                if (nextSource != null) {\n                    // Skip over if undefined or null\n                    for (var nextKey in nextSource) {\n                        // Avoid bugs when hasOwnProperty is shadowed\n                        if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                            to[nextKey] = nextSource[nextKey];\n                        }\n                    }\n                }\n            }\n            return to;\n        };\n    }\n\n    // IE 中兼容 Element.prototype.matches\n    if (!Element.prototype.matches) {\n        Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function (s) {\n            var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n                i = matches.length;\n            while (--i >= 0 && matches.item(i) !== this) {}\n            return i > -1;\n        };\n    }\n};\n\n/*\n    DOM 操作 API\n*/\n\n// 根据 html 代码片段创建 dom 对象\nfunction createElemByHTML(html) {\n    var div = void 0;\n    div = document.createElement('div');\n    div.innerHTML = html;\n    return div.children;\n}\n\n// 是否是 DOM List\nfunction isDOMList(selector) {\n    if (!selector) {\n        return false;\n    }\n    if (selector instanceof HTMLCollection || selector instanceof NodeList) {\n        return true;\n    }\n    return false;\n}\n\n// 封装 document.querySelectorAll\nfunction querySelectorAll(selector) {\n    var result = document.querySelectorAll(selector);\n    if (isDOMList(result)) {\n        return result;\n    } else {\n        return [result];\n    }\n}\n\n// 记录所有的事件绑定\nvar eventList = [];\n\n// 创建构造函数\nfunction DomElement(selector) {\n    if (!selector) {\n        return;\n    }\n\n    // selector 本来就是 DomElement 对象，直接返回\n    if (selector instanceof DomElement) {\n        return selector;\n    }\n\n    this.selector = selector;\n    var nodeType = selector.nodeType;\n\n    // 根据 selector 得出的结果（如 DOM，DOM List）\n    var selectorResult = [];\n    if (nodeType === 9) {\n        // document 节点\n        selectorResult = [selector];\n    } else if (nodeType === 1) {\n        // 单个 DOM 节点\n        selectorResult = [selector];\n    } else if (isDOMList(selector) || selector instanceof Array) {\n        // DOM List 或者数组\n        selectorResult = selector;\n    } else if (typeof selector === 'string') {\n        // 字符串\n        selector = selector.replace('/\\n/mg', '').trim();\n        if (selector.indexOf('<') === 0) {\n            // 如 <div>\n            selectorResult = createElemByHTML(selector);\n        } else {\n            // 如 #id .class\n            selectorResult = querySelectorAll(selector);\n        }\n    }\n\n    var length = selectorResult.length;\n    if (!length) {\n        // 空数组\n        return this;\n    }\n\n    // 加入 DOM 节点\n    var i = void 0;\n    for (i = 0; i < length; i++) {\n        this[i] = selectorResult[i];\n    }\n    this.length = length;\n}\n\n// 修改原型\nDomElement.prototype = {\n    constructor: DomElement,\n\n    // 类数组，forEach\n    forEach: function forEach(fn) {\n        var i = void 0;\n        for (i = 0; i < this.length; i++) {\n            var elem = this[i];\n            var result = fn.call(elem, elem, i);\n            if (result === false) {\n                break;\n            }\n        }\n        return this;\n    },\n\n    // clone\n    clone: function clone(deep) {\n        var cloneList = [];\n        this.forEach(function (elem) {\n            cloneList.push(elem.cloneNode(!!deep));\n        });\n        return $(cloneList);\n    },\n\n    // 获取第几个元素\n    get: function get(index) {\n        var length = this.length;\n        if (index >= length) {\n            index = index % length;\n        }\n        return $(this[index]);\n    },\n\n    // 第一个\n    first: function first() {\n        return this.get(0);\n    },\n\n    // 最后一个\n    last: function last() {\n        var length = this.length;\n        return this.get(length - 1);\n    },\n\n    // 绑定事件\n    on: function on(type, selector, fn) {\n        // selector 不为空，证明绑定事件要加代理\n        if (!fn) {\n            fn = selector;\n            selector = null;\n        }\n\n        // type 是否有多个\n        var types = [];\n        types = type.split(/\\s+/);\n\n        return this.forEach(function (elem) {\n            types.forEach(function (type) {\n                if (!type) {\n                    return;\n                }\n\n                // 记录下，方便后面解绑\n                eventList.push({\n                    elem: elem,\n                    type: type,\n                    fn: fn\n                });\n\n                if (!selector) {\n                    // 无代理\n                    elem.addEventListener(type, fn);\n                    return;\n                }\n\n                // 有代理\n                elem.addEventListener(type, function (e) {\n                    var target = e.target;\n                    if (target.matches(selector)) {\n                        fn.call(target, e);\n                    }\n                });\n            });\n        });\n    },\n\n    // 取消事件绑定\n    off: function off(type, fn) {\n        return this.forEach(function (elem) {\n            elem.removeEventListener(type, fn);\n        });\n    },\n\n    // 获取/设置 属性\n    attr: function attr(key, val) {\n        if (val == null) {\n            // 获取值\n            return this[0].getAttribute(key);\n        } else {\n            // 设置值\n            return this.forEach(function (elem) {\n                elem.setAttribute(key, val);\n            });\n        }\n    },\n\n    // 添加 class\n    addClass: function addClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    return !!item.trim();\n                });\n                // 添加 class\n                if (arr.indexOf(className) < 0) {\n                    arr.push(className);\n                }\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            } else {\n                elem.className = className;\n            }\n        });\n    },\n\n    // 删除 class\n    removeClass: function removeClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    item = item.trim();\n                    // 删除 class\n                    if (!item || item === className) {\n                        return false;\n                    }\n                    return true;\n                });\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            }\n        });\n    },\n\n    // 修改 css\n    css: function css(key, val) {\n        var currentStyle = key + ':' + val + ';';\n        return this.forEach(function (elem) {\n            var style = (elem.getAttribute('style') || '').trim();\n            var styleArr = void 0,\n                resultArr = [];\n            if (style) {\n                // 将 style 按照 ; 拆分为数组\n                styleArr = style.split(';');\n                styleArr.forEach(function (item) {\n                    // 对每项样式，按照 : 拆分为 key 和 value\n                    var arr = item.split(':').map(function (i) {\n                        return i.trim();\n                    });\n                    if (arr.length === 2) {\n                        resultArr.push(arr[0] + ':' + arr[1]);\n                    }\n                });\n                // 替换或者新增\n                resultArr = resultArr.map(function (item) {\n                    if (item.indexOf(key) === 0) {\n                        return currentStyle;\n                    } else {\n                        return item;\n                    }\n                });\n                if (resultArr.indexOf(currentStyle) < 0) {\n                    resultArr.push(currentStyle);\n                }\n                // 结果\n                elem.setAttribute('style', resultArr.join('; '));\n            } else {\n                // style 无值\n                elem.setAttribute('style', currentStyle);\n            }\n        });\n    },\n\n    // 显示\n    show: function show() {\n        return this.css('display', 'block');\n    },\n\n    // 隐藏\n    hide: function hide() {\n        return this.css('display', 'none');\n    },\n\n    // 获取子节点\n    children: function children() {\n        var elem = this[0];\n        if (!elem) {\n            return null;\n        }\n\n        return $(elem.children);\n    },\n\n    // 获取子节点（包括文本节点）\n    childNodes: function childNodes() {\n        var elem = this[0];\n        if (!elem) {\n            return null;\n        }\n\n        return $(elem.childNodes);\n    },\n\n    // 增加子节点\n    append: function append($children) {\n        return this.forEach(function (elem) {\n            $children.forEach(function (child) {\n                elem.appendChild(child);\n            });\n        });\n    },\n\n    // 移除当前节点\n    remove: function remove() {\n        return this.forEach(function (elem) {\n            if (elem.remove) {\n                elem.remove();\n            } else {\n                var parent = elem.parentElement;\n                parent && parent.removeChild(elem);\n            }\n        });\n    },\n\n    // 是否包含某个子节点\n    isContain: function isContain($child) {\n        var elem = this[0];\n        var child = $child[0];\n        return elem.contains(child);\n    },\n\n    // 尺寸数据\n    getSizeData: function getSizeData() {\n        var elem = this[0];\n        return elem.getBoundingClientRect(); // 可得到 bottom height left right top width 的数据\n    },\n\n    // 封装 nodeName\n    getNodeName: function getNodeName() {\n        var elem = this[0];\n        return elem.nodeName;\n    },\n\n    // 从当前元素查找\n    find: function find(selector) {\n        var elem = this[0];\n        return $(elem.querySelectorAll(selector));\n    },\n\n    // 获取当前元素的 text\n    text: function text(val) {\n        if (!val) {\n            // 获取 text\n            var elem = this[0];\n            return elem.innerHTML.replace(/<.*?>/g, function () {\n                return '';\n            });\n        } else {\n            // 设置 text\n            return this.forEach(function (elem) {\n                elem.innerHTML = val;\n            });\n        }\n    },\n\n    // 获取 html\n    html: function html(value) {\n        var elem = this[0];\n        if (value == null) {\n            return elem.innerHTML;\n        } else {\n            elem.innerHTML = value;\n            return this;\n        }\n    },\n\n    // 获取 value\n    val: function val() {\n        var elem = this[0];\n        return elem.value.trim();\n    },\n\n    // focus\n    focus: function focus() {\n        return this.forEach(function (elem) {\n            elem.focus();\n        });\n    },\n\n    // parent\n    parent: function parent() {\n        var elem = this[0];\n        return $(elem.parentElement);\n    },\n\n    // parentUntil 找到符合 selector 的父节点\n    parentUntil: function parentUntil(selector, _currentElem) {\n        var results = document.querySelectorAll(selector);\n        var length = results.length;\n        if (!length) {\n            // 传入的 selector 无效\n            return null;\n        }\n\n        var elem = _currentElem || this[0];\n        if (elem.nodeName === 'BODY') {\n            return null;\n        }\n\n        var parent = elem.parentElement;\n        var i = void 0;\n        for (i = 0; i < length; i++) {\n            if (parent === results[i]) {\n                // 找到，并返回\n                return $(parent);\n            }\n        }\n\n        // 继续查找\n        return this.parentUntil(selector, parent);\n    },\n\n    // 判断两个 elem 是否相等\n    equal: function equal($elem) {\n        if ($elem.nodeType === 1) {\n            return this[0] === $elem;\n        } else {\n            return this[0] === $elem[0];\n        }\n    },\n\n    // 将该元素插入到某个元素前面\n    insertBefore: function insertBefore(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            parent.insertBefore(elem, referenceNode);\n        });\n    },\n\n    // 将该元素插入到某个元素后面\n    insertAfter: function insertAfter(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            if (parent.lastChild === referenceNode) {\n                // 最后一个元素\n                parent.appendChild(elem);\n            } else {\n                // 不是最后一个元素\n                parent.insertBefore(elem, referenceNode.nextSibling);\n            }\n        });\n    }\n};\n\n// new 一个对象\nfunction $(selector) {\n    return new DomElement(selector);\n}\n\n// 解绑所有事件，用于销毁编辑器\n$.offAll = function () {\n    eventList.forEach(function (item) {\n        var elem = item.elem;\n        var type = item.type;\n        var fn = item.fn;\n        // 解绑\n        elem.removeEventListener(type, fn);\n    });\n};\n\n/*\n    配置信息\n*/\n\nvar config = {\n\n    // 默认菜单配置\n    menus: ['head', 'bold', 'fontSize', 'fontName', 'italic', 'underline', 'strikeThrough', 'foreColor', 'backColor', 'link', 'list', 'justify', 'quote', 'emoticon', 'image', 'table', 'video', 'code', 'undo', 'redo'],\n\n    fontNames: ['宋体', '微软雅黑', 'Arial', 'Tahoma', 'Verdana'],\n\n    colors: ['#000000', '#eeece0', '#1c487f', '#4d80bf', '#c24f4a', '#8baa4a', '#7b5ba1', '#46acc8', '#f9963b', '#ffffff'],\n\n    // // 语言配置\n    // lang: {\n    //     '设置标题': 'title',\n    //     '正文': 'p',\n    //     '链接文字': 'link text',\n    //     '链接': 'link',\n    //     '插入': 'insert',\n    //     '创建': 'init'\n    // },\n\n    // 表情\n    emotions: [{\n        // tab 的标题\n        title: '默认',\n        // type -> 'emoji' / 'image'\n        type: 'image',\n        // content -> 数组\n        content: [{\n            alt: '[坏笑]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/50/pcmoren_huaixiao_org.png'\n        }, {\n            alt: '[舔屏]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/40/pcmoren_tian_org.png'\n        }, {\n            alt: '[污]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/3c/pcmoren_wu_org.png'\n        }]\n    }, {\n        // tab 的标题\n        title: '新浪',\n        // type -> 'emoji' / 'image'\n        type: 'image',\n        // content -> 数组\n        content: [{\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/7a/shenshou_thumb.gif',\n            alt: '[草泥马]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/60/horse2_thumb.gif',\n            alt: '[神马]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/bc/fuyun_thumb.gif',\n            alt: '[浮云]'\n        }]\n    }, {\n        // tab 的标题\n        title: 'emoji',\n        // type -> 'emoji' / 'image'\n        type: 'emoji',\n        // content -> 数组\n        content: '😀 😃 😄 😁 😆 😅 😂 😊 😇 🙂 🙃 😉 😓 😪 😴 🙄 🤔 😬 🤐'.split(/\\s/)\n    }],\n\n    // 编辑区域的 z-index\n    zIndex: 10000,\n\n    // 是否开启 debug 模式（debug 模式下错误会 throw error 形式抛出）\n    debug: false,\n\n    // 插入链接时候的格式校验\n    linkCheck: function linkCheck(text, link) {\n        // text 是插入的文字\n        // link 是插入的链接\n        return true; // 返回 true 即表示成功\n        // return '校验失败' // 返回字符串即表示失败的提示信息\n    },\n\n    // 插入网络图片的校验\n    linkImgCheck: function linkImgCheck(src) {\n        // src 即图片的地址\n        return true; // 返回 true 即表示成功\n        // return '校验失败'  // 返回字符串即表示失败的提示信息\n    },\n\n    // 粘贴过滤样式，默认开启\n    pasteFilterStyle: true,\n\n    // 粘贴内容时，忽略图片。默认关闭\n    pasteIgnoreImg: false,\n\n    // 对粘贴的文字进行自定义处理，返回处理后的结果。编辑器会将处理后的结果粘贴到编辑区域中。\n    // IE 暂时不支持\n    pasteTextHandle: function pasteTextHandle(content) {\n        // content 即粘贴过来的内容（html 或 纯文本），可进行自定义处理然后返回\n        return content;\n    },\n\n    // onchange 事件\n    // onchange: function (html) {\n    //     // html 即变化之后的内容\n    //     console.log(html)\n    // },\n\n    // 是否显示添加网络图片的 tab\n    showLinkImg: true,\n\n    // 插入网络图片的回调\n    linkImgCallback: function linkImgCallback(url) {\n        // console.log(url)  // url 即插入图片的地址\n    },\n\n    // 默认上传图片 max size: 5M\n    uploadImgMaxSize: 5 * 1024 * 1024,\n\n    // 配置一次最多上传几个图片\n    // uploadImgMaxLength: 5,\n\n    // 上传图片，是否显示 base64 格式\n    uploadImgShowBase64: false,\n\n    // 上传图片，server 地址（如果有值，则 base64 格式的配置则失效）\n    // uploadImgServer: '/upload',\n\n    // 自定义配置 filename\n    uploadFileName: '',\n\n    // 上传图片的自定义参数\n    uploadImgParams: {\n        // token: 'abcdef12345'\n    },\n\n    // 上传图片的自定义header\n    uploadImgHeaders: {\n        // 'Accept': 'text/x-json'\n    },\n\n    // 配置 XHR withCredentials\n    withCredentials: false,\n\n    // 自定义上传图片超时时间 ms\n    uploadImgTimeout: 10000,\n\n    // 上传图片 hook \n    uploadImgHooks: {\n        // customInsert: function (insertLinkImg, result, editor) {\n        //     console.log('customInsert')\n        //     // 图片上传并返回结果，自定义插入图片的事件，而不是编辑器自动插入图片\n        //     const data = result.data1 || []\n        //     data.forEach(link => {\n        //         insertLinkImg(link)\n        //     })\n        // },\n        before: function before(xhr, editor, files) {\n            // 图片上传之前触发\n\n            // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n            // return {\n            //     prevent: true,\n            //     msg: '放弃上传'\n            // }\n        },\n        success: function success(xhr, editor, result) {\n            // 图片上传并返回结果，图片插入成功之后触发\n        },\n        fail: function fail(xhr, editor, result) {\n            // 图片上传并返回结果，但图片插入错误时触发\n        },\n        error: function error(xhr, editor) {\n            // 图片上传出错时触发\n        },\n        timeout: function timeout(xhr, editor) {\n            // 图片上传超时时触发\n        }\n    },\n\n    // 是否上传七牛云，默认为 false\n    qiniu: false\n\n};\n\n/*\n    工具\n*/\n\n// 和 UA 相关的属性\nvar UA = {\n    _ua: navigator.userAgent,\n\n    // 是否 webkit\n    isWebkit: function isWebkit() {\n        var reg = /webkit/i;\n        return reg.test(this._ua);\n    },\n\n    // 是否 IE\n    isIE: function isIE() {\n        return 'ActiveXObject' in window;\n    }\n};\n\n// 遍历对象\nfunction objForEach(obj, fn) {\n    var key = void 0,\n        result = void 0;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result = fn.call(obj, key, obj[key]);\n            if (result === false) {\n                break;\n            }\n        }\n    }\n}\n\n// 遍历类数组\nfunction arrForEach(fakeArr, fn) {\n    var i = void 0,\n        item = void 0,\n        result = void 0;\n    var length = fakeArr.length || 0;\n    for (i = 0; i < length; i++) {\n        item = fakeArr[i];\n        result = fn.call(fakeArr, item, i);\n        if (result === false) {\n            break;\n        }\n    }\n}\n\n// 获取随机数\nfunction getRandom(prefix) {\n    return prefix + Math.random().toString().slice(2);\n}\n\n// 替换 html 特殊字符\nfunction replaceHtmlSymbol(html) {\n    if (html == null) {\n        return '';\n    }\n    return html.replace(/</gm, '&lt;').replace(/>/gm, '&gt;').replace(/\"/gm, '&quot;').replace(/(\\r\\n|\\r|\\n)/g, '<br/>');\n}\n\n// 返回百分比的格式\n\n\n// 判断是不是 function\nfunction isFunction(fn) {\n    return typeof fn === 'function';\n}\n\n/*\n    bold-menu\n*/\n// 构造函数\nfunction Bold(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-bold\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nBold.prototype = {\n    constructor: Bold,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 bold 命令\n        editor.cmd.do('bold');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('bold')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    替换多语言\n */\n\nvar replaceLang = function (editor, str) {\n    var langArgs = editor.config.langArgs || [];\n    var result = str;\n\n    langArgs.forEach(function (item) {\n        var reg = item.reg;\n        var val = item.val;\n\n        if (reg.test(result)) {\n            result = result.replace(reg, function () {\n                return val;\n            });\n        }\n    });\n\n    return result;\n};\n\n/*\n    droplist\n*/\nvar _emptyFn = function _emptyFn() {};\n\n// 构造函数\nfunction DropList(menu, opt) {\n    var _this = this;\n\n    // droplist 所依附的菜单\n    var editor = menu.editor;\n    this.menu = menu;\n    this.opt = opt;\n    // 容器\n    var $container = $('<div class=\"w-e-droplist\"></div>');\n\n    // 标题\n    var $title = opt.$title;\n    var titleHtml = void 0;\n    if ($title) {\n        // 替换多语言\n        titleHtml = $title.html();\n        titleHtml = replaceLang(editor, titleHtml);\n        $title.html(titleHtml);\n\n        $title.addClass('w-e-dp-title');\n        $container.append($title);\n    }\n\n    var list = opt.list || [];\n    var type = opt.type || 'list'; // 'list' 列表形式（如“标题”菜单） / 'inline-block' 块状形式（如“颜色”菜单）\n    var onClick = opt.onClick || _emptyFn;\n\n    // 加入 DOM 并绑定事件\n    var $list = $('<ul class=\"' + (type === 'list' ? 'w-e-list' : 'w-e-block') + '\"></ul>');\n    $container.append($list);\n    list.forEach(function (item) {\n        var $elem = item.$elem;\n\n        // 替换多语言\n        var elemHtml = $elem.html();\n        elemHtml = replaceLang(editor, elemHtml);\n        $elem.html(elemHtml);\n\n        var value = item.value;\n        var $li = $('<li class=\"w-e-item\"></li>');\n        if ($elem) {\n            $li.append($elem);\n            $list.append($li);\n            $li.on('click', function (e) {\n                onClick(value);\n\n                // 隐藏\n                _this.hideTimeoutId = setTimeout(function () {\n                    _this.hide();\n                }, 0);\n            });\n        }\n    });\n\n    // 绑定隐藏事件\n    $container.on('mouseleave', function (e) {\n        _this.hideTimeoutId = setTimeout(function () {\n            _this.hide();\n        }, 0);\n    });\n\n    // 记录属性\n    this.$container = $container;\n\n    // 基本属性\n    this._rendered = false;\n    this._show = false;\n}\n\n// 原型\nDropList.prototype = {\n    constructor: DropList,\n\n    // 显示（插入DOM）\n    show: function show() {\n        if (this.hideTimeoutId) {\n            // 清除之前的定时隐藏\n            clearTimeout(this.hideTimeoutId);\n        }\n\n        var menu = this.menu;\n        var $menuELem = menu.$elem;\n        var $container = this.$container;\n        if (this._show) {\n            return;\n        }\n        if (this._rendered) {\n            // 显示\n            $container.show();\n        } else {\n            // 加入 DOM 之前先定位位置\n            var menuHeight = $menuELem.getSizeData().height || 0;\n            var width = this.opt.width || 100; // 默认为 100\n            $container.css('margin-top', menuHeight + 'px').css('width', width + 'px');\n\n            // 加入到 DOM\n            $menuELem.append($container);\n            this._rendered = true;\n        }\n\n        // 修改属性\n        this._show = true;\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        if (this.showTimeoutId) {\n            // 清除之前的定时显示\n            clearTimeout(this.showTimeoutId);\n        }\n\n        var $container = this.$container;\n        if (!this._show) {\n            return;\n        }\n        // 隐藏并需改属性\n        $container.hide();\n        this._show = false;\n    }\n};\n\n/*\n    menu - header\n*/\n// 构造函数\nfunction Head(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-header\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>设置标题</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<h1>H1</h1>'), value: '<h1>' }, { $elem: $('<h2>H2</h2>'), value: '<h2>' }, { $elem: $('<h3>H3</h3>'), value: '<h3>' }, { $elem: $('<h4>H4</h4>'), value: '<h4>' }, { $elem: $('<h5>H5</h5>'), value: '<h5>' }, { $elem: $('<p>正文</p>'), value: '<p>' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 Head 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nHead.prototype = {\n    constructor: Head,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        if (editor.$textElem.equal($selectionElem)) {\n            // 不能选中多行来设置标题，否则会出现问题\n            // 例如选中的是 <p>xxx</p><p>yyy</p> 来设置标题，设置之后会成为 <h1>xxx<br>yyy</h1> 不符合预期\n            return;\n        }\n\n        editor.cmd.do('formatBlock', value);\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^h/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - fontSize\n*/\n\n// 构造函数\nfunction FontSize(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-text-heigh\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 160,\n        $title: $('<p>字号</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span style=\"font-size: x-small;\">x-small</span>'), value: '1' }, { $elem: $('<span style=\"font-size: small;\">small</span>'), value: '2' }, { $elem: $('<span>normal</span>'), value: '3' }, { $elem: $('<span style=\"font-size: large;\">large</span>'), value: '4' }, { $elem: $('<span style=\"font-size: x-large;\">x-large</span>'), value: '5' }, { $elem: $('<span style=\"font-size: xx-large;\">xx-large</span>'), value: '6' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 FontSize 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nFontSize.prototype = {\n    constructor: FontSize,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('fontSize', value);\n    }\n};\n\n/*\n    menu - fontName\n*/\n\n// 构造函数\nfunction FontName(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-font\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 获取配置的字体\n    var config = editor.config;\n    var fontNames = config.fontNames || [];\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>字体</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: fontNames.map(function (fontName) {\n            return { $elem: $('<span style=\"font-family: ' + fontName + ';\">' + fontName + '</span>'), value: fontName };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 FontName 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nFontName.prototype = {\n    constructor: FontName,\n\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('fontName', value);\n    }\n};\n\n/*\n    panel\n*/\n\nvar emptyFn = function emptyFn() {};\n\n// 记录已经显示 panel 的菜单\nvar _isCreatedPanelMenus = [];\n\n// 构造函数\nfunction Panel(menu, opt) {\n    this.menu = menu;\n    this.opt = opt;\n}\n\n// 原型\nPanel.prototype = {\n    constructor: Panel,\n\n    // 显示（插入DOM）\n    show: function show() {\n        var _this = this;\n\n        var menu = this.menu;\n        if (_isCreatedPanelMenus.indexOf(menu) >= 0) {\n            // 该菜单已经创建了 panel 不能再创建\n            return;\n        }\n\n        var editor = menu.editor;\n        var $body = $('body');\n        var $textContainerElem = editor.$textContainerElem;\n        var opt = this.opt;\n\n        // panel 的容器\n        var $container = $('<div class=\"w-e-panel-container\"></div>');\n        var width = opt.width || 300; // 默认 300px\n        $container.css('width', width + 'px').css('margin-left', (0 - width) / 2 + 'px');\n\n        // 添加关闭按钮\n        var $closeBtn = $('<i class=\"w-e-icon-close w-e-panel-close\"></i>');\n        $container.append($closeBtn);\n        $closeBtn.on('click', function () {\n            _this.hide();\n        });\n\n        // 准备 tabs 容器\n        var $tabTitleContainer = $('<ul class=\"w-e-panel-tab-title\"></ul>');\n        var $tabContentContainer = $('<div class=\"w-e-panel-tab-content\"></div>');\n        $container.append($tabTitleContainer).append($tabContentContainer);\n\n        // 设置高度\n        var height = opt.height;\n        if (height) {\n            $tabContentContainer.css('height', height + 'px').css('overflow-y', 'auto');\n        }\n\n        // tabs\n        var tabs = opt.tabs || [];\n        var tabTitleArr = [];\n        var tabContentArr = [];\n        tabs.forEach(function (tab, tabIndex) {\n            if (!tab) {\n                return;\n            }\n            var title = tab.title || '';\n            var tpl = tab.tpl || '';\n\n            // 替换多语言\n            title = replaceLang(editor, title);\n            tpl = replaceLang(editor, tpl);\n\n            // 添加到 DOM\n            var $title = $('<li class=\"w-e-item\">' + title + '</li>');\n            $tabTitleContainer.append($title);\n            var $content = $(tpl);\n            $tabContentContainer.append($content);\n\n            // 记录到内存\n            $title._index = tabIndex;\n            tabTitleArr.push($title);\n            tabContentArr.push($content);\n\n            // 设置 active 项\n            if (tabIndex === 0) {\n                $title._active = true;\n                $title.addClass('w-e-active');\n            } else {\n                $content.hide();\n            }\n\n            // 绑定 tab 的事件\n            $title.on('click', function (e) {\n                if ($title._active) {\n                    return;\n                }\n                // 隐藏所有的 tab\n                tabTitleArr.forEach(function ($title) {\n                    $title._active = false;\n                    $title.removeClass('w-e-active');\n                });\n                tabContentArr.forEach(function ($content) {\n                    $content.hide();\n                });\n\n                // 显示当前的 tab\n                $title._active = true;\n                $title.addClass('w-e-active');\n                $content.show();\n            });\n        });\n\n        // 绑定关闭事件\n        $container.on('click', function (e) {\n            // 点击时阻止冒泡\n            e.stopPropagation();\n        });\n        $body.on('click', function (e) {\n            _this.hide();\n        });\n\n        // 添加到 DOM\n        $textContainerElem.append($container);\n\n        // 绑定 opt 的事件，只有添加到 DOM 之后才能绑定成功\n        tabs.forEach(function (tab, index) {\n            if (!tab) {\n                return;\n            }\n            var events = tab.events || [];\n            events.forEach(function (event) {\n                var selector = event.selector;\n                var type = event.type;\n                var fn = event.fn || emptyFn;\n                var $content = tabContentArr[index];\n                $content.find(selector).on(type, function (e) {\n                    e.stopPropagation();\n                    var needToHide = fn(e);\n                    // 执行完事件之后，是否要关闭 panel\n                    if (needToHide) {\n                        _this.hide();\n                    }\n                });\n            });\n        });\n\n        // focus 第一个 elem\n        var $inputs = $container.find('input[type=text],textarea');\n        if ($inputs.length) {\n            $inputs.get(0).focus();\n        }\n\n        // 添加到属性\n        this.$container = $container;\n\n        // 隐藏其他 panel\n        this._hideOtherPanels();\n        // 记录该 menu 已经创建了 panel\n        _isCreatedPanelMenus.push(menu);\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        var menu = this.menu;\n        var $container = this.$container;\n        if ($container) {\n            $container.remove();\n        }\n\n        // 将该 menu 记录中移除\n        _isCreatedPanelMenus = _isCreatedPanelMenus.filter(function (item) {\n            if (item === menu) {\n                return false;\n            } else {\n                return true;\n            }\n        });\n    },\n\n    // 一个 panel 展示时，隐藏其他 panel\n    _hideOtherPanels: function _hideOtherPanels() {\n        if (!_isCreatedPanelMenus.length) {\n            return;\n        }\n        _isCreatedPanelMenus.forEach(function (menu) {\n            var panel = menu.panel || {};\n            if (panel.hide) {\n                panel.hide();\n            }\n        });\n    }\n};\n\n/*\n    menu - link\n*/\n// 构造函数\nfunction Link(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-link\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nLink.prototype = {\n    constructor: Link,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $linkelem = void 0;\n\n        if (this._active) {\n            // 当前选区在链接里面\n            $linkelem = editor.selection.getSelectionContainerElem();\n            if (!$linkelem) {\n                return;\n            }\n            // 将该元素都包含在选取之内，以便后面整体替换\n            editor.selection.createRangeByElem($linkelem);\n            editor.selection.restoreSelection();\n            // 显示 panel\n            this._createPanel($linkelem.text(), $linkelem.attr('href'));\n        } else {\n            // 当前选区不在链接里面\n            if (editor.selection.isSelectionEmpty()) {\n                // 选区是空的，未选中内容\n                this._createPanel('', '');\n            } else {\n                // 选中内容了\n                this._createPanel(editor.selection.getSelectionText(), '');\n            }\n        }\n    },\n\n    // 创建 panel\n    _createPanel: function _createPanel(text, link) {\n        var _this = this;\n\n        // panel 中需要用到的id\n        var inputLinkId = getRandom('input-link');\n        var inputTextId = getRandom('input-text');\n        var btnOkId = getRandom('btn-ok');\n        var btnDelId = getRandom('btn-del');\n\n        // 是否显示“删除链接”\n        var delBtnDisplay = this._active ? 'inline-block' : 'none';\n\n        // 初始化并显示 panel\n        var panel = new Panel(this, {\n            width: 300,\n            // panel 中可包含多个 tab\n            tabs: [{\n                // tab 的标题\n                title: '链接',\n                // 模板\n                tpl: '<div>\\n                            <input id=\"' + inputTextId + '\" type=\"text\" class=\"block\" value=\"' + text + '\" placeholder=\"\\u94FE\\u63A5\\u6587\\u5B57\"/></td>\\n                            <input id=\"' + inputLinkId + '\" type=\"text\" class=\"block\" value=\"' + link + '\" placeholder=\"http://...\"/></td>\\n                            <div class=\"w-e-button-container\">\\n                                <button id=\"' + btnOkId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                                <button id=\"' + btnDelId + '\" class=\"gray right\" style=\"display:' + delBtnDisplay + '\">\\u5220\\u9664\\u94FE\\u63A5</button>\\n                            </div>\\n                        </div>',\n                // 事件绑定\n                events: [\n                // 插入链接\n                {\n                    selector: '#' + btnOkId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行插入链接\n                        var $link = $('#' + inputLinkId);\n                        var $text = $('#' + inputTextId);\n                        var link = $link.val();\n                        var text = $text.val();\n                        _this._insertLink(text, link);\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                },\n                // 删除链接\n                {\n                    selector: '#' + btnDelId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行删除链接\n                        _this._delLink();\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // tab end\n            ] // tabs end\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 删除当前链接\n    _delLink: function _delLink() {\n        if (!this._active) {\n            return;\n        }\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var selectionText = editor.selection.getSelectionText();\n        editor.cmd.do('insertHTML', '<span>' + selectionText + '</span>');\n    },\n\n    // 插入链接\n    _insertLink: function _insertLink(text, link) {\n        var editor = this.editor;\n        var config = editor.config;\n        var linkCheck = config.linkCheck;\n        var checkResult = true; // 默认为 true\n        if (linkCheck && typeof linkCheck === 'function') {\n            checkResult = linkCheck(text, link);\n        }\n        if (checkResult === true) {\n            editor.cmd.do('insertHTML', '<a href=\"' + link + '\" target=\"_blank\">' + text + '</a>');\n        } else {\n            alert(checkResult);\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        if ($selectionELem.getNodeName() === 'A') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    italic-menu\n*/\n// 构造函数\nfunction Italic(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-italic\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nItalic.prototype = {\n    constructor: Italic,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 italic 命令\n        editor.cmd.do('italic');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('italic')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    redo-menu\n*/\n// 构造函数\nfunction Redo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-redo\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nRedo.prototype = {\n    constructor: Redo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 redo 命令\n        editor.cmd.do('redo');\n    }\n};\n\n/*\n    strikeThrough-menu\n*/\n// 构造函数\nfunction StrikeThrough(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-strikethrough\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nStrikeThrough.prototype = {\n    constructor: StrikeThrough,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 strikeThrough 命令\n        editor.cmd.do('strikeThrough');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('strikeThrough')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    underline-menu\n*/\n// 构造函数\nfunction Underline(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-underline\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUnderline.prototype = {\n    constructor: Underline,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 underline 命令\n        editor.cmd.do('underline');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('underline')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    undo-menu\n*/\n// 构造函数\nfunction Undo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-undo\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUndo.prototype = {\n    constructor: Undo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 undo 命令\n        editor.cmd.do('undo');\n    }\n};\n\n/*\n    menu - list\n*/\n// 构造函数\nfunction List(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-list2\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>设置列表</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-list-numbered\"></i> 有序列表</span>'), value: 'insertOrderedList' }, { $elem: $('<span><i class=\"w-e-icon-list2\"></i> 无序列表</span>'), value: 'insertUnorderedList' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nList.prototype = {\n    constructor: List,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        editor.selection.restoreSelection();\n        if (editor.cmd.queryCommandState(value)) {\n            return;\n        }\n        editor.cmd.do(value);\n\n        // 验证列表是否被包裹在 <p> 之内\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        if ($selectionElem.getNodeName() === 'LI') {\n            $selectionElem = $selectionElem.parent();\n        }\n        if (/^ol|ul$/i.test($selectionElem.getNodeName()) === false) {\n            return;\n        }\n        if ($selectionElem.equal($textElem)) {\n            // 证明是顶级标签，没有被 <p> 包裹\n            return;\n        }\n        var $parent = $selectionElem.parent();\n        if ($parent.equal($textElem)) {\n            // $parent 是顶级标签，不能删除\n            return;\n        }\n\n        $selectionElem.insertAfter($parent);\n        $parent.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('insertUnOrderedList') || editor.cmd.queryCommandState('insertOrderedList')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - justify\n*/\n// 构造函数\nfunction Justify(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paragraph-left\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>对齐方式</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-paragraph-left\"></i> 靠左</span>'), value: 'justifyLeft' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-center\"></i> 居中</span>'), value: 'justifyCenter' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-right\"></i> 靠右</span>'), value: 'justifyRight' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nJustify.prototype = {\n    constructor: Justify,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do(value);\n    }\n};\n\n/*\n    menu - Forecolor\n*/\n// 构造函数\nfunction ForeColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-pencil2\"></i></div>');\n    this.type = 'droplist';\n\n    // 获取配置的颜色\n    var config = editor.config;\n    var colors = config.colors || [];\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>文字颜色</p>'),\n        type: 'inline-block', // droplist 内容以 block 形式展示\n        list: colors.map(function (color) {\n            return { $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-pencil2\"></i>'), value: color };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 ForeColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nForeColor.prototype = {\n    constructor: ForeColor,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('foreColor', value);\n    }\n};\n\n/*\n    menu - BackColor\n*/\n// 构造函数\nfunction BackColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paint-brush\"></i></div>');\n    this.type = 'droplist';\n\n    // 获取配置的颜色\n    var config = editor.config;\n    var colors = config.colors || [];\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>背景色</p>'),\n        type: 'inline-block', // droplist 内容以 block 形式展示\n        list: colors.map(function (color) {\n            return { $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-paint-brush\"></i>'), value: color };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 BackColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nBackColor.prototype = {\n    constructor: BackColor,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('backColor', value);\n    }\n};\n\n/*\n    menu - quote\n*/\n// 构造函数\nfunction Quote(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-quotes-left\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nQuote.prototype = {\n    constructor: Quote,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        var nodeName = $selectionElem.getNodeName();\n\n        if (!UA.isIE()) {\n            if (nodeName === 'BLOCKQUOTE') {\n                // 撤销 quote\n                editor.cmd.do('formatBlock', '<P>');\n            } else {\n                // 转换为 quote\n                editor.cmd.do('formatBlock', '<BLOCKQUOTE>');\n            }\n            return;\n        }\n\n        // IE 中不支持 formatBlock <BLOCKQUOTE> ，要用其他方式兼容\n        var content = void 0,\n            $targetELem = void 0;\n        if (nodeName === 'P') {\n            // 将 P 转换为 quote\n            content = $selectionElem.text();\n            $targetELem = $('<blockquote>' + content + '</blockquote>');\n            $targetELem.insertAfter($selectionElem);\n            $selectionElem.remove();\n            return;\n        }\n        if (nodeName === 'BLOCKQUOTE') {\n            // 撤销 quote\n            content = $selectionElem.text();\n            $targetELem = $('<p>' + content + '</p>');\n            $targetELem.insertAfter($selectionElem);\n            $selectionElem.remove();\n        }\n    },\n\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^BLOCKQUOTE$/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - code\n*/\n// 构造函数\nfunction Code(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-terminal\"></i>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nCode.prototype = {\n    constructor: Code,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $startElem = editor.selection.getSelectionStartElem();\n        var $endElem = editor.selection.getSelectionEndElem();\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n        var selectionText = editor.selection.getSelectionText();\n        var $code = void 0;\n\n        if (!$startElem.equal($endElem)) {\n            // 跨元素选择，不做处理\n            editor.selection.restoreSelection();\n            return;\n        }\n        if (!isSeleEmpty) {\n            // 选取不是空，用 <code> 包裹即可\n            $code = $('<code>' + selectionText + '</code>');\n            editor.cmd.do('insertElem', $code);\n            editor.selection.createRangeByElem($code, false);\n            editor.selection.restoreSelection();\n            return;\n        }\n\n        // 选取是空，且没有夸元素选择，则插入 <pre><code></code></prev>\n        if (this._active) {\n            // 选中状态，将编辑内容\n            this._createPanel($startElem.html());\n        } else {\n            // 未选中状态，将创建内容\n            this._createPanel();\n        }\n    },\n\n    _createPanel: function _createPanel(value) {\n        var _this = this;\n\n        // value - 要编辑的内容\n        value = value || '';\n        var type = !value ? 'new' : 'edit';\n        var textId = getRandom('texxt');\n        var btnId = getRandom('btn');\n\n        var panel = new Panel(this, {\n            width: 500,\n            // 一个 Panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入代码',\n                // 模板\n                tpl: '<div>\\n                        <textarea id=\"' + textId + '\" style=\"height:145px;;\">' + value + '</textarea>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    <div>',\n                // 事件绑定\n                events: [\n                // 插入代码\n                {\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textId);\n                        var text = $text.val() || $text.html();\n                        text = replaceHtmlSymbol(text);\n                        if (type === 'new') {\n                            // 新插入\n                            _this._insertCode(text);\n                        } else {\n                            // 编辑更新\n                            _this._updateCode(text);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // new Panel end\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入代码\n    _insertCode: function _insertCode(value) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', '<pre><code>' + value + '</code></pre><p><br></p>');\n    },\n\n    // 更新代码\n    _updateCode: function _updateCode(value) {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        $selectionELem.html(value);\n        editor.selection.restoreSelection();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var $parentElem = $selectionELem.parent();\n        if ($selectionELem.getNodeName() === 'CODE' && $parentElem.getNodeName() === 'PRE') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - emoticon\n*/\n// 构造函数\nfunction Emoticon(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-happy\"></i>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nEmoticon.prototype = {\n    constructor: Emoticon,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        var editor = this.editor;\n        var config = editor.config;\n        // 获取表情配置\n        var emotions = config.emotions || [];\n\n        // 创建表情 dropPanel 的配置\n        var tabConfig = [];\n        emotions.forEach(function (emotData) {\n            var emotType = emotData.type;\n            var content = emotData.content || [];\n\n            // 这一组表情最终拼接出来的 html\n            var faceHtml = '';\n\n            // emoji 表情\n            if (emotType === 'emoji') {\n                content.forEach(function (item) {\n                    if (item) {\n                        faceHtml += '<span class=\"w-e-item\">' + item + '</span>';\n                    }\n                });\n            }\n            // 图片表情\n            if (emotType === 'image') {\n                content.forEach(function (item) {\n                    var src = item.src;\n                    var alt = item.alt;\n                    if (src) {\n                        // 加一个 data-w-e 属性，点击图片的时候不再提示编辑图片\n                        faceHtml += '<span class=\"w-e-item\"><img src=\"' + src + '\" alt=\"' + alt + '\" data-w-e=\"1\"/></span>';\n                    }\n                });\n            }\n\n            tabConfig.push({\n                title: emotData.title,\n                tpl: '<div class=\"w-e-emoticon-container\">' + faceHtml + '</div>',\n                events: [{\n                    selector: 'span.w-e-item',\n                    type: 'click',\n                    fn: function fn(e) {\n                        var target = e.target;\n                        var $target = $(target);\n                        var nodeName = $target.getNodeName();\n\n                        var insertHtml = void 0;\n                        if (nodeName === 'IMG') {\n                            // 插入图片\n                            insertHtml = $target.parent().html();\n                        } else {\n                            // 插入 emoji\n                            insertHtml = '<span>' + $target.html() + '</span>';\n                        }\n\n                        _this._insert(insertHtml);\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            });\n        });\n\n        var panel = new Panel(this, {\n            width: 300,\n            height: 200,\n            // 一个 Panel 包含多个 tab\n            tabs: tabConfig\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入表情\n    _insert: function _insert(emotHtml) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', emotHtml);\n    }\n};\n\n/*\n    menu - table\n*/\n// 构造函数\nfunction Table(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-table2\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nTable.prototype = {\n    constructor: Table,\n\n    onClick: function onClick() {\n        if (this._active) {\n            // 编辑现有表格\n            this._createEditPanel();\n        } else {\n            // 插入新表格\n            this._createInsertPanel();\n        }\n    },\n\n    // 创建插入新表格的 panel\n    _createInsertPanel: function _createInsertPanel() {\n        var _this = this;\n\n        // 用到的 id\n        var btnInsertId = getRandom('btn');\n        var textRowNum = getRandom('row');\n        var textColNum = getRandom('col');\n\n        var panel = new Panel(this, {\n            width: 250,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入表格',\n                // 模板\n                tpl: '<div>\\n                        <p style=\"text-align:left; padding:5px 0;\">\\n                            \\u521B\\u5EFA\\n                            <input id=\"' + textRowNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u884C\\n                            <input id=\"' + textColNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u5217\\u7684\\u8868\\u683C\\n                        </p>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnInsertId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 点击按钮，插入表格\n                    selector: '#' + btnInsertId,\n                    type: 'click',\n                    fn: function fn() {\n                        var rowNum = parseInt($('#' + textRowNum).val());\n                        var colNum = parseInt($('#' + textColNum).val());\n\n                        if (rowNum && colNum && rowNum > 0 && colNum > 0) {\n                            // form 数据有效\n                            _this._insert(rowNum, colNum);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // panel end\n\n        // 展示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入表格\n    _insert: function _insert(rowNum, colNum) {\n        // 拼接 table 模板\n        var r = void 0,\n            c = void 0;\n        var html = '<table border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">';\n        for (r = 0; r < rowNum; r++) {\n            html += '<tr>';\n            if (r === 0) {\n                for (c = 0; c < colNum; c++) {\n                    html += '<th>&nbsp;</th>';\n                }\n            } else {\n                for (c = 0; c < colNum; c++) {\n                    html += '<td>&nbsp;</td>';\n                }\n            }\n            html += '</tr>';\n        }\n        html += '</table><p><br></p>';\n\n        // 执行命令\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', html);\n\n        // 防止 firefox 下出现 resize 的控制点\n        editor.cmd.do('enableObjectResizing', false);\n        editor.cmd.do('enableInlineTableEditing', false);\n    },\n\n    // 创建编辑表格的 panel\n    _createEditPanel: function _createEditPanel() {\n        var _this2 = this;\n\n        // 可用的 id\n        var addRowBtnId = getRandom('add-row');\n        var addColBtnId = getRandom('add-col');\n        var delRowBtnId = getRandom('del-row');\n        var delColBtnId = getRandom('del-col');\n        var delTableBtnId = getRandom('del-table');\n\n        // 创建 panel 对象\n        var panel = new Panel(this, {\n            width: 320,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '编辑表格',\n                // 模板\n                tpl: '<div>\\n                        <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                            <button id=\"' + addRowBtnId + '\" class=\"left\">\\u589E\\u52A0\\u884C</button>\\n                            <button id=\"' + delRowBtnId + '\" class=\"red left\">\\u5220\\u9664\\u884C</button>\\n                            <button id=\"' + addColBtnId + '\" class=\"left\">\\u589E\\u52A0\\u5217</button>\\n                            <button id=\"' + delColBtnId + '\" class=\"red left\">\\u5220\\u9664\\u5217</button>\\n                        </div>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + delTableBtnId + '\" class=\"gray left\">\\u5220\\u9664\\u8868\\u683C</button>\\n                        </dv>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 增加行\n                    selector: '#' + addRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 增加列\n                    selector: '#' + addColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除行\n                    selector: '#' + delRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除列\n                    selector: '#' + delColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除表格\n                    selector: '#' + delTableBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delTable();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            }]\n        });\n        // 显示 panel\n        panel.show();\n    },\n\n    // 获取选中的单元格的位置信息\n    _getLocationData: function _getLocationData() {\n        var result = {};\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName !== 'TD' && nodeName !== 'TH') {\n            return;\n        }\n\n        // 获取 td index\n        var $tr = $selectionELem.parent();\n        var $tds = $tr.children();\n        var tdLength = $tds.length;\n        $tds.forEach(function (td, index) {\n            if (td === $selectionELem[0]) {\n                // 记录并跳出循环\n                result.td = {\n                    index: index,\n                    elem: td,\n                    length: tdLength\n                };\n                return false;\n            }\n        });\n\n        // 获取 tr index\n        var $tbody = $tr.parent();\n        var $trs = $tbody.children();\n        var trLength = $trs.length;\n        $trs.forEach(function (tr, index) {\n            if (tr === $tr[0]) {\n                // 记录并跳出循环\n                result.tr = {\n                    index: index,\n                    elem: tr,\n                    length: trLength\n                };\n                return false;\n            }\n        });\n\n        // 返回结果\n        return result;\n    },\n\n    // 增加行\n    _addRow: function _addRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        var tdData = locationData.td;\n        var tdLength = tdData.length;\n\n        // 拼接即将插入的字符串\n        var newTr = document.createElement('tr');\n        var tpl = '',\n            i = void 0;\n        for (i = 0; i < tdLength; i++) {\n            tpl += '<td>&nbsp;</td>';\n        }\n        newTr.innerHTML = tpl;\n        // 插入\n        $(newTr).insertAfter($currentTr);\n    },\n\n    // 增加列\n    _addCol: function _addCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            var name = $currentTd.getNodeName().toLowerCase();\n\n            // new 一个 td，并插入\n            var newTd = document.createElement(name);\n            $(newTd).insertAfter($currentTd);\n        });\n    },\n\n    // 删除行\n    _delRow: function _delRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        $currentTr.remove();\n    },\n\n    // 删除列\n    _delCol: function _delCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            // 删除\n            $currentTd.remove();\n        });\n    },\n\n    // 删除表格\n    _delTable: function _delTable() {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var $table = $selectionELem.parentUntil('table');\n        if (!$table) {\n            return;\n        }\n        $table.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName === 'TD' || nodeName === 'TH') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - video\n*/\n// 构造函数\nfunction Video(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-play\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nVideo.prototype = {\n    constructor: Video,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        // 创建 id\n        var textValId = getRandom('text-val');\n        var btnId = getRandom('btn');\n\n        // 创建 panel\n        var panel = new Panel(this, {\n            width: 350,\n            // 一个 panel 多个 tab\n            tabs: [{\n                // 标题\n                title: '插入视频',\n                // 模板\n                tpl: '<div>\\n                        <input id=\"' + textValId + '\" type=\"text\" class=\"block\" placeholder=\"\\u683C\\u5F0F\\u5982\\uFF1A<iframe src=... ></iframe>\"/>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textValId);\n                        var val = $text.val().trim();\n\n                        // 测试用视频地址\n                        // <iframe height=498 width=510 src='http://player.youku.com/embed/XMjcwMzc3MzM3Mg==' frameborder=0 'allowfullscreen'></iframe>\n\n                        if (val) {\n                            // 插入视频\n                            _this._insert(val);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // panel end\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入视频\n    _insert: function _insert(val) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', val + '<p><br></p>');\n    }\n};\n\n/*\n    menu - img\n*/\n// 构造函数\nfunction Image(editor) {\n    this.editor = editor;\n    var imgMenuId = getRandom('w-e-img');\n    this.$elem = $('<div class=\"w-e-menu\" id=\"' + imgMenuId + '\"><i class=\"w-e-icon-image\"></i></div>');\n    editor.imgMenuId = imgMenuId;\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nImage.prototype = {\n    constructor: Image,\n\n    onClick: function onClick() {\n        var editor = this.editor;\n        var config = editor.config;\n        if (config.qiniu) {\n            return;\n        }\n        if (this._active) {\n            this._createEditPanel();\n        } else {\n            this._createInsertPanel();\n        }\n    },\n\n    _createEditPanel: function _createEditPanel() {\n        var editor = this.editor;\n\n        // id\n        var width30 = getRandom('width-30');\n        var width50 = getRandom('width-50');\n        var width100 = getRandom('width-100');\n        var delBtn = getRandom('del-btn');\n\n        // tab 配置\n        var tabsConfig = [{\n            title: '编辑图片',\n            tpl: '<div>\\n                    <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                        <span style=\"float:left;font-size:14px;margin:4px 5px 0 5px;color:#333;\">\\u6700\\u5927\\u5BBD\\u5EA6\\uFF1A</span>\\n                        <button id=\"' + width30 + '\" class=\"left\">30%</button>\\n                        <button id=\"' + width50 + '\" class=\"left\">50%</button>\\n                        <button id=\"' + width100 + '\" class=\"left\">100%</button>\\n                    </div>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + delBtn + '\" class=\"gray left\">\\u5220\\u9664\\u56FE\\u7247</button>\\n                    </dv>\\n                </div>',\n            events: [{\n                selector: '#' + width30,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '30%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + width50,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '50%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + width100,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '100%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + delBtn,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.remove();\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }]\n        }];\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 300,\n            tabs: tabsConfig\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    _createInsertPanel: function _createInsertPanel() {\n        var editor = this.editor;\n        var uploadImg = editor.uploadImg;\n        var config = editor.config;\n\n        // id\n        var upTriggerId = getRandom('up-trigger');\n        var upFileId = getRandom('up-file');\n        var linkUrlId = getRandom('link-url');\n        var linkBtnId = getRandom('link-btn');\n\n        // tabs 的配置\n        var tabsConfig = [{\n            title: '上传图片',\n            tpl: '<div class=\"w-e-up-img-container\">\\n                    <div id=\"' + upTriggerId + '\" class=\"w-e-up-btn\">\\n                        <i class=\"w-e-icon-upload2\"></i>\\n                    </div>\\n                    <div style=\"display:none;\">\\n                        <input id=\"' + upFileId + '\" type=\"file\" multiple=\"multiple\" accept=\"image/jpg,image/jpeg,image/png,image/gif,image/bmp\"/>\\n                    </div>\\n                </div>',\n            events: [{\n                // 触发选择图片\n                selector: '#' + upTriggerId,\n                type: 'click',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (fileElem) {\n                        fileElem.click();\n                    } else {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n                }\n            }, {\n                // 选择图片完毕\n                selector: '#' + upFileId,\n                type: 'change',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (!fileElem) {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n\n                    // 获取选中的 file 对象列表\n                    var fileList = fileElem.files;\n                    if (fileList.length) {\n                        uploadImg.uploadImg(fileList);\n                    }\n\n                    // 返回 true 可关闭 panel\n                    return true;\n                }\n            }]\n        }, // first tab end\n        {\n            title: '网络图片',\n            tpl: '<div>\\n                    <input id=\"' + linkUrlId + '\" type=\"text\" class=\"block\" placeholder=\"\\u56FE\\u7247\\u94FE\\u63A5\"/></td>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + linkBtnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                    </div>\\n                </div>',\n            events: [{\n                selector: '#' + linkBtnId,\n                type: 'click',\n                fn: function fn() {\n                    var $linkUrl = $('#' + linkUrlId);\n                    var url = $linkUrl.val().trim();\n\n                    if (url) {\n                        uploadImg.insertLinkImg(url);\n                    }\n\n                    // 返回 true 表示函数执行结束之后关闭 panel\n                    return true;\n                }\n            }]\n        } // second tab end\n        ]; // tabs end\n\n        // 判断 tabs 的显示\n        var tabsConfigResult = [];\n        if ((config.uploadImgShowBase64 || config.uploadImgServer || config.customUploadImg) && window.FileReader) {\n            // 显示“上传图片”\n            tabsConfigResult.push(tabsConfig[0]);\n        }\n        if (config.showLinkImg) {\n            // 显示“网络图片”\n            tabsConfigResult.push(tabsConfig[1]);\n        }\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 300,\n            tabs: tabsConfigResult\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor._selectedImg) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    所有菜单的汇总\n*/\n\n// 存储菜单的构造函数\nvar MenuConstructors = {};\n\nMenuConstructors.bold = Bold;\n\nMenuConstructors.head = Head;\n\nMenuConstructors.fontSize = FontSize;\n\nMenuConstructors.fontName = FontName;\n\nMenuConstructors.link = Link;\n\nMenuConstructors.italic = Italic;\n\nMenuConstructors.redo = Redo;\n\nMenuConstructors.strikeThrough = StrikeThrough;\n\nMenuConstructors.underline = Underline;\n\nMenuConstructors.undo = Undo;\n\nMenuConstructors.list = List;\n\nMenuConstructors.justify = Justify;\n\nMenuConstructors.foreColor = ForeColor;\n\nMenuConstructors.backColor = BackColor;\n\nMenuConstructors.quote = Quote;\n\nMenuConstructors.code = Code;\n\nMenuConstructors.emoticon = Emoticon;\n\nMenuConstructors.table = Table;\n\nMenuConstructors.video = Video;\n\nMenuConstructors.image = Image;\n\n/*\n    菜单集合\n*/\n// 构造函数\nfunction Menus(editor) {\n    this.editor = editor;\n    this.menus = {};\n}\n\n// 修改原型\nMenus.prototype = {\n    constructor: Menus,\n\n    // 初始化菜单\n    init: function init() {\n        var _this = this;\n\n        var editor = this.editor;\n        var config = editor.config || {};\n        var configMenus = config.menus || []; // 获取配置中的菜单\n\n        // 根据配置信息，创建菜单\n        configMenus.forEach(function (menuKey) {\n            var MenuConstructor = MenuConstructors[menuKey];\n            if (MenuConstructor && typeof MenuConstructor === 'function') {\n                // 创建单个菜单\n                _this.menus[menuKey] = new MenuConstructor(editor);\n            }\n        });\n\n        // 添加到菜单栏\n        this._addToToolbar();\n\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 添加到菜单栏\n    _addToToolbar: function _addToToolbar() {\n        var editor = this.editor;\n        var $toolbarElem = editor.$toolbarElem;\n        var menus = this.menus;\n        var config = editor.config;\n        // config.zIndex 是配置的编辑区域的 z-index，菜单的 z-index 得在其基础上 +1\n        var zIndex = config.zIndex + 1;\n        objForEach(menus, function (key, menu) {\n            var $elem = menu.$elem;\n            if ($elem) {\n                // 设置 z-index\n                $elem.css('z-index', zIndex);\n                $toolbarElem.append($elem);\n            }\n        });\n    },\n\n    // 绑定菜单 click mouseenter 事件\n    _bindEvent: function _bindEvent() {\n        var menus = this.menus;\n        var editor = this.editor;\n        objForEach(menus, function (key, menu) {\n            var type = menu.type;\n            if (!type) {\n                return;\n            }\n            var $elem = menu.$elem;\n            var droplist = menu.droplist;\n            var panel = menu.panel;\n\n            // 点击类型，例如 bold\n            if (type === 'click' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    menu.onClick(e);\n                });\n            }\n\n            // 下拉框，例如 head\n            if (type === 'droplist' && droplist) {\n                $elem.on('mouseenter', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 显示\n                    droplist.showTimeoutId = setTimeout(function () {\n                        droplist.show();\n                    }, 200);\n                }).on('mouseleave', function (e) {\n                    // 隐藏\n                    droplist.hideTimeoutId = setTimeout(function () {\n                        droplist.hide();\n                    }, 0);\n                });\n            }\n\n            // 弹框类型，例如 link\n            if (type === 'panel' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    e.stopPropagation();\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 在自定义事件中显示 panel\n                    menu.onClick(e);\n                });\n            }\n        });\n    },\n\n    // 尝试修改菜单状态\n    changeActive: function changeActive() {\n        var menus = this.menus;\n        objForEach(menus, function (key, menu) {\n            if (menu.tryChangeActive) {\n                setTimeout(function () {\n                    menu.tryChangeActive();\n                }, 100);\n            }\n        });\n    }\n};\n\n/*\n    粘贴信息的处理\n*/\n\n// 获取粘贴的纯文本\nfunction getPasteText(e) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n    }\n\n    return replaceHtmlSymbol(pasteText);\n}\n\n// 获取粘贴的html\nfunction getPasteHtml(e, filterStyle, ignoreImg) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0,\n        pasteHtml = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n        pasteHtml = clipboardData.getData('text/html');\n    }\n    if (!pasteHtml && pasteText) {\n        pasteHtml = '<p>' + replaceHtmlSymbol(pasteText) + '</p>';\n    }\n    if (!pasteHtml) {\n        return;\n    }\n\n    // 过滤word中状态过来的无用字符\n    var docSplitHtml = pasteHtml.split('</html>');\n    if (docSplitHtml.length === 2) {\n        pasteHtml = docSplitHtml[0];\n    }\n\n    // 过滤无用标签\n    pasteHtml = pasteHtml.replace(/<(meta|script|link).+?>/igm, '');\n    // 去掉注释\n    pasteHtml = pasteHtml.replace(/<!--.*?-->/mg, '');\n    // 过滤 data-xxx 属性\n    pasteHtml = pasteHtml.replace(/\\s?data-.+?=('|\").+?('|\")/igm, '');\n\n    if (ignoreImg) {\n        // 忽略图片\n        pasteHtml = pasteHtml.replace(/<img.+?>/igm, '');\n    }\n\n    if (filterStyle) {\n        // 过滤样式\n        pasteHtml = pasteHtml.replace(/\\s?(class|style)=('|\").*?('|\")/igm, '');\n    } else {\n        // 保留样式\n        pasteHtml = pasteHtml.replace(/\\s?class=('|\").*?('|\")/igm, '');\n    }\n\n    return pasteHtml;\n}\n\n// 获取粘贴的图片文件\nfunction getPasteImgs(e) {\n    var result = [];\n    var txt = getPasteText(e);\n    if (txt) {\n        // 有文字，就忽略图片\n        return result;\n    }\n\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData || {};\n    var items = clipboardData.items;\n    if (!items) {\n        return result;\n    }\n\n    objForEach(items, function (key, value) {\n        var type = value.type;\n        if (/image/i.test(type)) {\n            result.push(value.getAsFile());\n        }\n    });\n\n    return result;\n}\n\n/*\n    编辑区域\n*/\n\n// 获取一个 elem.childNodes 的 JSON 数据\nfunction getChildrenJSON($elem) {\n    var result = [];\n    var $children = $elem.childNodes() || []; // 注意 childNodes() 可以获取文本节点\n    $children.forEach(function (curElem) {\n        var elemResult = void 0;\n        var nodeType = curElem.nodeType;\n\n        // 文本节点\n        if (nodeType === 3) {\n            elemResult = curElem.textContent;\n            elemResult = replaceHtmlSymbol(elemResult);\n        }\n\n        // 普通 DOM 节点\n        if (nodeType === 1) {\n            elemResult = {};\n\n            // tag\n            elemResult.tag = curElem.nodeName.toLowerCase();\n            // attr\n            var attrData = [];\n            var attrList = curElem.attributes || {};\n            var attrListLength = attrList.length || 0;\n            for (var i = 0; i < attrListLength; i++) {\n                var attr = attrList[i];\n                attrData.push({\n                    name: attr.name,\n                    value: attr.value\n                });\n            }\n            elemResult.attrs = attrData;\n            // children（递归）\n            elemResult.children = getChildrenJSON($(curElem));\n        }\n\n        result.push(elemResult);\n    });\n    return result;\n}\n\n// 构造函数\nfunction Text(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nText.prototype = {\n    constructor: Text,\n\n    // 初始化\n    init: function init() {\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 清空内容\n    clear: function clear() {\n        this.html('<p><br></p>');\n    },\n\n    // 获取 设置 html\n    html: function html(val) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        var html = void 0;\n        if (val == null) {\n            html = $textElem.html();\n            // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n            html = html.replace(/\\u200b/gm, '');\n            return html;\n        } else {\n            $textElem.html(val);\n\n            // 初始化选取，将光标定位到内容尾部\n            editor.initSelection();\n        }\n    },\n\n    // 获取 JSON\n    getJSON: function getJSON() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        return getChildrenJSON($textElem);\n    },\n\n    // 获取 设置 text\n    text: function text(val) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        var text = void 0;\n        if (val == null) {\n            text = $textElem.text();\n            // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n            text = text.replace(/\\u200b/gm, '');\n            return text;\n        } else {\n            $textElem.text('<p>' + val + '</p>');\n\n            // 初始化选取，将光标定位到内容尾部\n            editor.initSelection();\n        }\n    },\n\n    // 追加内容\n    append: function append(html) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        $textElem.append($(html));\n\n        // 初始化选取，将光标定位到内容尾部\n        editor.initSelection();\n    },\n\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n        // 实时保存选取\n        this._saveRangeRealTime();\n\n        // 按回车建时的特殊处理\n        this._enterKeyHandle();\n\n        // 清空时保留 <p><br></p>\n        this._clearHandle();\n\n        // 粘贴事件（粘贴文字，粘贴图片）\n        this._pasteHandle();\n\n        // tab 特殊处理\n        this._tabHandle();\n\n        // img 点击\n        this._imgHandle();\n\n        // 拖拽事件\n        this._dragHandle();\n    },\n\n    // 实时保存选取\n    _saveRangeRealTime: function _saveRangeRealTime() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 保存当前的选区\n        function saveRange(e) {\n            // 随时保存选区\n            editor.selection.saveRange();\n            // 更新按钮 ative 状态\n            editor.menus.changeActive();\n        }\n        // 按键后保存\n        $textElem.on('keyup', saveRange);\n        $textElem.on('mousedown', function (e) {\n            // mousedown 状态下，鼠标滑动到编辑区域外面，也需要保存选区\n            $textElem.on('mouseleave', saveRange);\n        });\n        $textElem.on('mouseup', function (e) {\n            saveRange();\n            // 在编辑器区域之内完成点击，取消鼠标滑动到编辑区外面的事件\n            $textElem.off('mouseleave', saveRange);\n        });\n    },\n\n    // 按回车键时的特殊处理\n    _enterKeyHandle: function _enterKeyHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        function insertEmptyP($selectionElem) {\n            var $p = $('<p><br></p>');\n            $p.insertBefore($selectionElem);\n            editor.selection.createRangeByElem($p, true);\n            editor.selection.restoreSelection();\n            $selectionElem.remove();\n        }\n\n        // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n        function pHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            var $parentElem = $selectionElem.parent();\n\n            if ($parentElem.html() === '<code><br></code>') {\n                // 回车之前光标所在一个 <p><code>.....</code></p> ，忽然回车生成一个空的 <p><code><br></code></p>\n                // 而且继续回车跳不出去，因此只能特殊处理\n                insertEmptyP($selectionElem);\n                return;\n            }\n\n            if (!$parentElem.equal($textElem)) {\n                // 不是顶级标签\n                return;\n            }\n\n            var nodeName = $selectionElem.getNodeName();\n            if (nodeName === 'P') {\n                // 当前的标签是 P ，不用做处理\n                return;\n            }\n\n            if ($selectionElem.text()) {\n                // 有内容，不做处理\n                return;\n            }\n\n            // 插入 <p> ，并将选取定位到 <p>，删除当前标签\n            insertEmptyP($selectionElem);\n        }\n\n        $textElem.on('keyup', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                return;\n            }\n            // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n            pHandle(e);\n        });\n\n        // <pre><code></code></pre> 回车时 特殊处理\n        function codeHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName !== 'CODE' || parentNodeName !== 'PRE') {\n                // 不符合要求 忽略\n                return;\n            }\n\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n\n            // 处理：光标定位到代码末尾，联系点击两次回车，即跳出代码块\n            if (editor._willBreakCode === true) {\n                // 此时可以跳出代码块\n                // 插入 <p> ，并将选取定位到 <p>\n                var $p = $('<p><br></p>');\n                $p.insertAfter($parentElem);\n                editor.selection.createRangeByElem($p, true);\n                editor.selection.restoreSelection();\n\n                // 修改状态\n                editor._willBreakCode = false;\n\n                e.preventDefault();\n                return;\n            }\n\n            var _startOffset = editor.selection.getRange().startOffset;\n\n            // 处理：回车时，不能插入 <br> 而是插入 \\n ，因为是在 pre 标签里面\n            editor.cmd.do('insertHTML', '\\n');\n            editor.selection.saveRange();\n            if (editor.selection.getRange().startOffset === _startOffset) {\n                // 没起作用，再来一遍\n                editor.cmd.do('insertHTML', '\\n');\n            }\n\n            var codeLength = $selectionElem.html().length;\n            if (editor.selection.getRange().startOffset + 1 === codeLength) {\n                // 说明光标在代码最后的位置，执行了回车操作\n                // 记录下来，以便下次回车时候跳出 code\n                editor._willBreakCode = true;\n            }\n\n            // 阻止默认行为\n            e.preventDefault();\n        }\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                // 取消即将跳转代码块的记录\n                editor._willBreakCode = false;\n                return;\n            }\n            // <pre><code></code></pre> 回车时 特殊处理\n            codeHandle(e);\n        });\n    },\n\n    // 清空时保留 <p><br></p>\n    _clearHandle: function _clearHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 8) {\n                return;\n            }\n            var txtHtml = $textElem.html().toLowerCase().trim();\n            if (txtHtml === '<p><br></p>') {\n                // 最后剩下一个空行，就不再删除了\n                e.preventDefault();\n                return;\n            }\n        });\n\n        $textElem.on('keyup', function (e) {\n            if (e.keyCode !== 8) {\n                return;\n            }\n            var $p = void 0;\n            var txtHtml = $textElem.html().toLowerCase().trim();\n\n            // firefox 时用 txtHtml === '<br>' 判断，其他用 !txtHtml 判断\n            if (!txtHtml || txtHtml === '<br>') {\n                // 内容空了\n                $p = $('<p><br/></p>');\n                $textElem.html(''); // 一定要先清空，否则在 firefox 下有问题\n                $textElem.append($p);\n                editor.selection.createRangeByElem($p, false, true);\n                editor.selection.restoreSelection();\n            }\n        });\n    },\n\n    // 粘贴事件（粘贴文字 粘贴图片）\n    _pasteHandle: function _pasteHandle() {\n        var editor = this.editor;\n        var config = editor.config;\n        var pasteFilterStyle = config.pasteFilterStyle;\n        var pasteTextHandle = config.pasteTextHandle;\n        var ignoreImg = config.pasteIgnoreImg;\n        var $textElem = editor.$textElem;\n\n        // 粘贴图片、文本的事件，每次只能执行一个\n        // 判断该次粘贴事件是否可以执行\n        var pasteTime = 0;\n        function canDo() {\n            var now = Date.now();\n            var flag = false;\n            if (now - pasteTime >= 100) {\n                // 间隔大于 100 ms ，可以执行\n                flag = true;\n            }\n            pasteTime = now;\n            return flag;\n        }\n        function resetTime() {\n            pasteTime = 0;\n        }\n\n        // 粘贴文字\n        $textElem.on('paste', function (e) {\n            if (UA.isIE()) {\n                return;\n            } else {\n                // 阻止默认行为，使用 execCommand 的粘贴命令\n                e.preventDefault();\n            }\n\n            // 粘贴图片和文本，只能同时使用一个\n            if (!canDo()) {\n                return;\n            }\n\n            // 获取粘贴的文字\n            var pasteHtml = getPasteHtml(e, pasteFilterStyle, ignoreImg);\n            var pasteText = getPasteText(e);\n            pasteText = pasteText.replace(/\\n/gm, '<br>');\n\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n\n            // code 中只能粘贴纯文本\n            if (nodeName === 'CODE' || nodeName === 'PRE') {\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteText = '' + (pasteTextHandle(pasteText) || '');\n                }\n                editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n                return;\n            }\n\n            // 先放开注释，有问题再追查 ————\n            // // 表格中忽略，可能会出现异常问题\n            // if (nodeName === 'TD' || nodeName === 'TH') {\n            //     return\n            // }\n\n            if (!pasteHtml) {\n                // 没有内容，可继续执行下面的图片粘贴\n                resetTime();\n                return;\n            }\n            try {\n                // firefox 中，获取的 pasteHtml 可能是没有 <ul> 包裹的 <li>\n                // 因此执行 insertHTML 会报错\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteHtml = '' + (pasteTextHandle(pasteHtml) || '');\n                }\n                editor.cmd.do('insertHTML', pasteHtml);\n            } catch (ex) {\n                // 此时使用 pasteText 来兼容一下\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteText = '' + (pasteTextHandle(pasteText) || '');\n                }\n                editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n            }\n        });\n\n        // 粘贴图片\n        $textElem.on('paste', function (e) {\n            if (UA.isIE()) {\n                return;\n            } else {\n                e.preventDefault();\n            }\n\n            // 粘贴图片和文本，只能同时使用一个\n            if (!canDo()) {\n                return;\n            }\n\n            // 获取粘贴的图片\n            var pasteFiles = getPasteImgs(e);\n            if (!pasteFiles || !pasteFiles.length) {\n                return;\n            }\n\n            // 获取当前的元素\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n\n            // code 中粘贴忽略\n            if (nodeName === 'CODE' || nodeName === 'PRE') {\n                return;\n            }\n\n            // 上传图片\n            var uploadImg = editor.uploadImg;\n            uploadImg.uploadImg(pasteFiles);\n        });\n    },\n\n    // tab 特殊处理\n    _tabHandle: function _tabHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 9) {\n                return;\n            }\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName === 'CODE' && parentNodeName === 'PRE') {\n                // <pre><code> 里面\n                editor.cmd.do('insertHTML', '    ');\n            } else {\n                // 普通文字\n                editor.cmd.do('insertHTML', '&nbsp;&nbsp;&nbsp;&nbsp;');\n            }\n\n            e.preventDefault();\n        });\n    },\n\n    // img 点击\n    _imgHandle: function _imgHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 为图片增加 selected 样式\n        $textElem.on('click', 'img', function (e) {\n            var img = this;\n            var $img = $(img);\n\n            if ($img.attr('data-w-e') === '1') {\n                // 是表情图片，忽略\n                return;\n            }\n\n            // 记录当前点击过的图片\n            editor._selectedImg = $img;\n\n            // 修改选区并 restore ，防止用户此时点击退格键，会删除其他内容\n            editor.selection.createRangeByElem($img);\n            editor.selection.restoreSelection();\n        });\n\n        // 去掉图片的 selected 样式\n        $textElem.on('click  keyup', function (e) {\n            if (e.target.matches('img')) {\n                // 点击的是图片，忽略\n                return;\n            }\n            // 删除记录\n            editor._selectedImg = null;\n        });\n    },\n\n    // 拖拽事件\n    _dragHandle: function _dragHandle() {\n        var editor = this.editor;\n\n        // 禁用 document 拖拽事件\n        var $document = $(document);\n        $document.on('dragleave drop dragenter dragover', function (e) {\n            e.preventDefault();\n        });\n\n        // 添加编辑区域拖拽事件\n        var $textElem = editor.$textElem;\n        $textElem.on('drop', function (e) {\n            e.preventDefault();\n            var files = e.dataTransfer && e.dataTransfer.files;\n            if (!files || !files.length) {\n                return;\n            }\n\n            // 上传图片\n            var uploadImg = editor.uploadImg;\n            uploadImg.uploadImg(files);\n        });\n    }\n};\n\n/*\n    命令，封装 document.execCommand\n*/\n\n// 构造函数\nfunction Command(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nCommand.prototype = {\n    constructor: Command,\n\n    // 执行命令\n    do: function _do(name, value) {\n        var editor = this.editor;\n\n        // 使用 styleWithCSS\n        if (!editor._useStyleWithCSS) {\n            document.execCommand('styleWithCSS', null, true);\n            editor._useStyleWithCSS = true;\n        }\n\n        // 如果无选区，忽略\n        if (!editor.selection.getRange()) {\n            return;\n        }\n\n        // 恢复选取\n        editor.selection.restoreSelection();\n\n        // 执行\n        var _name = '_' + name;\n        if (this[_name]) {\n            // 有自定义事件\n            this[_name](value);\n        } else {\n            // 默认 command\n            this._execCommand(name, value);\n        }\n\n        // 修改菜单状态\n        editor.menus.changeActive();\n\n        // 最后，恢复选取保证光标在原来的位置闪烁\n        editor.selection.saveRange();\n        editor.selection.restoreSelection();\n\n        // 触发 onchange\n        editor.change && editor.change();\n    },\n\n    // 自定义 insertHTML 事件\n    _insertHTML: function _insertHTML(html) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        if (this.queryCommandSupported('insertHTML')) {\n            // W3C\n            this._execCommand('insertHTML', html);\n        } else if (range.insertNode) {\n            // IE\n            range.deleteContents();\n            range.insertNode($(html)[0]);\n        } else if (range.pasteHTML) {\n            // IE <= 10\n            range.pasteHTML(html);\n        }\n    },\n\n    // 插入 elem\n    _insertElem: function _insertElem($elem) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        if (range.insertNode) {\n            range.deleteContents();\n            range.insertNode($elem[0]);\n        }\n    },\n\n    // 封装 execCommand\n    _execCommand: function _execCommand(name, value) {\n        document.execCommand(name, false, value);\n    },\n\n    // 封装 document.queryCommandValue\n    queryCommandValue: function queryCommandValue(name) {\n        return document.queryCommandValue(name);\n    },\n\n    // 封装 document.queryCommandState\n    queryCommandState: function queryCommandState(name) {\n        return document.queryCommandState(name);\n    },\n\n    // 封装 document.queryCommandSupported\n    queryCommandSupported: function queryCommandSupported(name) {\n        return document.queryCommandSupported(name);\n    }\n};\n\n/*\n    selection range API\n*/\n\n// 构造函数\nfunction API(editor) {\n    this.editor = editor;\n    this._currentRange = null;\n}\n\n// 修改原型\nAPI.prototype = {\n    constructor: API,\n\n    // 获取 range 对象\n    getRange: function getRange() {\n        return this._currentRange;\n    },\n\n    // 保存选区\n    saveRange: function saveRange(_range) {\n        if (_range) {\n            // 保存已有选区\n            this._currentRange = _range;\n            return;\n        }\n\n        // 获取当前的选区\n        var selection = window.getSelection();\n        if (selection.rangeCount === 0) {\n            return;\n        }\n        var range = selection.getRangeAt(0);\n\n        // 判断选区内容是否在编辑内容之内\n        var $containerElem = this.getSelectionContainerElem(range);\n        if (!$containerElem) {\n            return;\n        }\n\n        // 判断选区内容是否在不可编辑区域之内\n        if ($containerElem.attr('contenteditable') === 'false' || $containerElem.parentUntil('[contenteditable=false]')) {\n            return;\n        }\n\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        if ($textElem.isContain($containerElem)) {\n            // 是编辑内容之内的\n            this._currentRange = range;\n        }\n    },\n\n    // 折叠选区\n    collapseRange: function collapseRange(toStart) {\n        if (toStart == null) {\n            // 默认为 false\n            toStart = false;\n        }\n        var range = this._currentRange;\n        if (range) {\n            range.collapse(toStart);\n        }\n    },\n\n    // 选中区域的文字\n    getSelectionText: function getSelectionText() {\n        var range = this._currentRange;\n        if (range) {\n            return this._currentRange.toString();\n        } else {\n            return '';\n        }\n    },\n\n    // 选区的 $Elem\n    getSelectionContainerElem: function getSelectionContainerElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.commonAncestorContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n    getSelectionStartElem: function getSelectionStartElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.startContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n    getSelectionEndElem: function getSelectionEndElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.endContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n\n    // 选区是否为空\n    isSelectionEmpty: function isSelectionEmpty() {\n        var range = this._currentRange;\n        if (range && range.startContainer) {\n            if (range.startContainer === range.endContainer) {\n                if (range.startOffset === range.endOffset) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    },\n\n    // 恢复选区\n    restoreSelection: function restoreSelection() {\n        var selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(this._currentRange);\n    },\n\n    // 创建一个空白（即 &#8203 字符）选区\n    createEmptyRange: function createEmptyRange() {\n        var editor = this.editor;\n        var range = this.getRange();\n        var $elem = void 0;\n\n        if (!range) {\n            // 当前无 range\n            return;\n        }\n        if (!this.isSelectionEmpty()) {\n            // 当前选区必须没有内容才可以\n            return;\n        }\n\n        try {\n            // 目前只支持 webkit 内核\n            if (UA.isWebkit()) {\n                // 插入 &#8203\n                editor.cmd.do('insertHTML', '&#8203;');\n                // 修改 offset 位置\n                range.setEnd(range.endContainer, range.endOffset + 1);\n                // 存储\n                this.saveRange(range);\n            } else {\n                $elem = $('<strong>&#8203;</strong>');\n                editor.cmd.do('insertElem', $elem);\n                this.createRangeByElem($elem, true);\n            }\n        } catch (ex) {\n            // 部分情况下会报错，兼容一下\n        }\n    },\n\n    // 根据 $Elem 设置选区\n    createRangeByElem: function createRangeByElem($elem, toStart, isContent) {\n        // $elem - 经过封装的 elem\n        // toStart - true 开始位置，false 结束位置\n        // isContent - 是否选中Elem的内容\n        if (!$elem.length) {\n            return;\n        }\n\n        var elem = $elem[0];\n        var range = document.createRange();\n\n        if (isContent) {\n            range.selectNodeContents(elem);\n        } else {\n            range.selectNode(elem);\n        }\n\n        if (typeof toStart === 'boolean') {\n            range.collapse(toStart);\n        }\n\n        // 存储 range\n        this.saveRange(range);\n    }\n};\n\n/*\n    上传进度条\n*/\n\nfunction Progress(editor) {\n    this.editor = editor;\n    this._time = 0;\n    this._isShow = false;\n    this._isRender = false;\n    this._timeoutId = 0;\n    this.$textContainer = editor.$textContainerElem;\n    this.$bar = $('<div class=\"w-e-progress\"></div>');\n}\n\nProgress.prototype = {\n    constructor: Progress,\n\n    show: function show(progress) {\n        var _this = this;\n\n        // 状态处理\n        if (this._isShow) {\n            return;\n        }\n        this._isShow = true;\n\n        // 渲染\n        var $bar = this.$bar;\n        if (!this._isRender) {\n            var $textContainer = this.$textContainer;\n            $textContainer.append($bar);\n        } else {\n            this._isRender = true;\n        }\n\n        // 改变进度（节流，100ms 渲染一次）\n        if (Date.now() - this._time > 100) {\n            if (progress <= 1) {\n                $bar.css('width', progress * 100 + '%');\n                this._time = Date.now();\n            }\n        }\n\n        // 隐藏\n        var timeoutId = this._timeoutId;\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        timeoutId = setTimeout(function () {\n            _this._hide();\n        }, 500);\n    },\n\n    _hide: function _hide() {\n        var $bar = this.$bar;\n        $bar.remove();\n\n        // 修改状态\n        this._time = 0;\n        this._isShow = false;\n        this._isRender = false;\n    }\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n/*\n    上传图片\n*/\n\n// 构造函数\nfunction UploadImg(editor) {\n    this.editor = editor;\n}\n\n// 原型\nUploadImg.prototype = {\n    constructor: UploadImg,\n\n    // 根据 debug 弹出不同的信息\n    _alert: function _alert(alertInfo, debugInfo) {\n        var editor = this.editor;\n        var debug = editor.config.debug;\n        var customAlert = editor.config.customAlert;\n\n        if (debug) {\n            throw new Error('wangEditor: ' + (debugInfo || alertInfo));\n        } else {\n            if (customAlert && typeof customAlert === 'function') {\n                customAlert(alertInfo);\n            } else {\n                alert(alertInfo);\n            }\n        }\n    },\n\n    // 根据链接插入图片\n    insertLinkImg: function insertLinkImg(link) {\n        var _this2 = this;\n\n        if (!link) {\n            return;\n        }\n        var editor = this.editor;\n        var config = editor.config;\n\n        // 校验格式\n        var linkImgCheck = config.linkImgCheck;\n        var checkResult = void 0;\n        if (linkImgCheck && typeof linkImgCheck === 'function') {\n            checkResult = linkImgCheck(link);\n            if (typeof checkResult === 'string') {\n                // 校验失败，提示信息\n                alert(checkResult);\n                return;\n            }\n        }\n\n        editor.cmd.do('insertHTML', '<img src=\"' + link + '\" style=\"max-width:100%;\"/>');\n\n        // 验证图片 url 是否有效，无效的话给出提示\n        var img = document.createElement('img');\n        img.onload = function () {\n            var callback = config.linkImgCallback;\n            if (callback && typeof callback === 'function') {\n                callback(link);\n            }\n\n            img = null;\n        };\n        img.onerror = function () {\n            img = null;\n            // 无法成功下载图片\n            _this2._alert('插入图片错误', 'wangEditor: \\u63D2\\u5165\\u56FE\\u7247\\u51FA\\u9519\\uFF0C\\u56FE\\u7247\\u94FE\\u63A5\\u662F \"' + link + '\"\\uFF0C\\u4E0B\\u8F7D\\u8BE5\\u94FE\\u63A5\\u5931\\u8D25');\n            return;\n        };\n        img.onabort = function () {\n            img = null;\n        };\n        img.src = link;\n    },\n\n    // 上传图片\n    uploadImg: function uploadImg(files) {\n        var _this3 = this;\n\n        if (!files || !files.length) {\n            return;\n        }\n\n        // ------------------------------ 获取配置信息 ------------------------------\n        var editor = this.editor;\n        var config = editor.config;\n        var uploadImgServer = config.uploadImgServer;\n        var uploadImgShowBase64 = config.uploadImgShowBase64;\n\n        var maxSize = config.uploadImgMaxSize;\n        var maxSizeM = maxSize / 1024 / 1024;\n        var maxLength = config.uploadImgMaxLength || 10000;\n        var uploadFileName = config.uploadFileName || '';\n        var uploadImgParams = config.uploadImgParams || {};\n        var uploadImgParamsWithUrl = config.uploadImgParamsWithUrl;\n        var uploadImgHeaders = config.uploadImgHeaders || {};\n        var hooks = config.uploadImgHooks || {};\n        var timeout = config.uploadImgTimeout || 3000;\n        var withCredentials = config.withCredentials;\n        if (withCredentials == null) {\n            withCredentials = false;\n        }\n        var customUploadImg = config.customUploadImg;\n\n        if (!customUploadImg) {\n            // 没有 customUploadImg 的情况下，需要如下两个配置才能继续进行图片上传\n            if (!uploadImgServer && !uploadImgShowBase64) {\n                return;\n            }\n        }\n\n        // ------------------------------ 验证文件信息 ------------------------------\n        var resultFiles = [];\n        var errInfo = [];\n        arrForEach(files, function (file) {\n            var name = file.name;\n            var size = file.size;\n\n            // chrome 低版本 name === undefined\n            if (!name || !size) {\n                return;\n            }\n\n            if (/\\.(jpg|jpeg|png|bmp|gif|webp)$/i.test(name) === false) {\n                // 后缀名不合法，不是图片\n                errInfo.push('\\u3010' + name + '\\u3011\\u4E0D\\u662F\\u56FE\\u7247');\n                return;\n            }\n            if (maxSize < size) {\n                // 上传图片过大\n                errInfo.push('\\u3010' + name + '\\u3011\\u5927\\u4E8E ' + maxSizeM + 'M');\n                return;\n            }\n\n            // 验证通过的加入结果列表\n            resultFiles.push(file);\n        });\n        // 抛出验证信息\n        if (errInfo.length) {\n            this._alert('图片验证未通过: \\n' + errInfo.join('\\n'));\n            return;\n        }\n        if (resultFiles.length > maxLength) {\n            this._alert('一次最多上传' + maxLength + '张图片');\n            return;\n        }\n\n        // ------------------------------ 自定义上传 ------------------------------\n        if (customUploadImg && typeof customUploadImg === 'function') {\n            customUploadImg(resultFiles, this.insertLinkImg.bind(this));\n\n            // 阻止以下代码执行\n            return;\n        }\n\n        // 添加图片数据\n        var formdata = new FormData();\n        arrForEach(resultFiles, function (file) {\n            var name = uploadFileName || file.name;\n            formdata.append(name, file);\n        });\n\n        // ------------------------------ 上传图片 ------------------------------\n        if (uploadImgServer && typeof uploadImgServer === 'string') {\n            // 添加参数\n            var uploadImgServerArr = uploadImgServer.split('#');\n            uploadImgServer = uploadImgServerArr[0];\n            var uploadImgServerHash = uploadImgServerArr[1] || '';\n            objForEach(uploadImgParams, function (key, val) {\n                // 因使用者反应，自定义参数不能默认 encode ，由 v3.1.1 版本开始注释掉\n                // val = encodeURIComponent(val)\n\n                // 第一，将参数拼接到 url 中\n                if (uploadImgParamsWithUrl) {\n                    if (uploadImgServer.indexOf('?') > 0) {\n                        uploadImgServer += '&';\n                    } else {\n                        uploadImgServer += '?';\n                    }\n                    uploadImgServer = uploadImgServer + key + '=' + val;\n                }\n\n                // 第二，将参数添加到 formdata 中\n                formdata.append(key, val);\n            });\n            if (uploadImgServerHash) {\n                uploadImgServer += '#' + uploadImgServerHash;\n            }\n\n            // 定义 xhr\n            var xhr = new XMLHttpRequest();\n            xhr.open('POST', uploadImgServer);\n\n            // 设置超时\n            xhr.timeout = timeout;\n            xhr.ontimeout = function () {\n                // hook - timeout\n                if (hooks.timeout && typeof hooks.timeout === 'function') {\n                    hooks.timeout(xhr, editor);\n                }\n\n                _this3._alert('上传图片超时');\n            };\n\n            // 监控 progress\n            if (xhr.upload) {\n                xhr.upload.onprogress = function (e) {\n                    var percent = void 0;\n                    // 进度条\n                    var progressBar = new Progress(editor);\n                    if (e.lengthComputable) {\n                        percent = e.loaded / e.total;\n                        progressBar.show(percent);\n                    }\n                };\n            }\n\n            // 返回数据\n            xhr.onreadystatechange = function () {\n                var result = void 0;\n                if (xhr.readyState === 4) {\n                    if (xhr.status < 200 || xhr.status >= 300) {\n                        // hook - error\n                        if (hooks.error && typeof hooks.error === 'function') {\n                            hooks.error(xhr, editor);\n                        }\n\n                        // xhr 返回状态错误\n                        _this3._alert('上传图片发生错误', '\\u4E0A\\u4F20\\u56FE\\u7247\\u53D1\\u751F\\u9519\\u8BEF\\uFF0C\\u670D\\u52A1\\u5668\\u8FD4\\u56DE\\u72B6\\u6001\\u662F ' + xhr.status);\n                        return;\n                    }\n\n                    result = xhr.responseText;\n                    if ((typeof result === 'undefined' ? 'undefined' : _typeof(result)) !== 'object') {\n                        try {\n                            result = JSON.parse(result);\n                        } catch (ex) {\n                            // hook - fail\n                            if (hooks.fail && typeof hooks.fail === 'function') {\n                                hooks.fail(xhr, editor, result);\n                            }\n\n                            _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果是: ' + result);\n                            return;\n                        }\n                    }\n                    if (!hooks.customInsert && result.errno != '0') {\n                        // hook - fail\n                        if (hooks.fail && typeof hooks.fail === 'function') {\n                            hooks.fail(xhr, editor, result);\n                        }\n\n                        // 数据错误\n                        _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果 errno=' + result.errno);\n                    } else {\n                        if (hooks.customInsert && typeof hooks.customInsert === 'function') {\n                            // 使用者自定义插入方法\n                            hooks.customInsert(_this3.insertLinkImg.bind(_this3), result, editor);\n                        } else {\n                            // 将图片插入编辑器\n                            var data = result.data || [];\n                            data.forEach(function (link) {\n                                _this3.insertLinkImg(link);\n                            });\n                        }\n\n                        // hook - success\n                        if (hooks.success && typeof hooks.success === 'function') {\n                            hooks.success(xhr, editor, result);\n                        }\n                    }\n                }\n            };\n\n            // hook - before\n            if (hooks.before && typeof hooks.before === 'function') {\n                var beforeResult = hooks.before(xhr, editor, resultFiles);\n                if (beforeResult && (typeof beforeResult === 'undefined' ? 'undefined' : _typeof(beforeResult)) === 'object') {\n                    if (beforeResult.prevent) {\n                        // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n                        this._alert(beforeResult.msg);\n                        return;\n                    }\n                }\n            }\n\n            // 自定义 headers\n            objForEach(uploadImgHeaders, function (key, val) {\n                xhr.setRequestHeader(key, val);\n            });\n\n            // 跨域传 cookie\n            xhr.withCredentials = withCredentials;\n\n            // 发送请求\n            xhr.send(formdata);\n\n            // 注意，要 return 。不去操作接下来的 base64 显示方式\n            return;\n        }\n\n        // ------------------------------ 显示 base64 格式 ------------------------------\n        if (uploadImgShowBase64) {\n            arrForEach(files, function (file) {\n                var _this = _this3;\n                var reader = new FileReader();\n                reader.readAsDataURL(file);\n                reader.onload = function () {\n                    _this.insertLinkImg(this.result);\n                };\n            });\n        }\n    }\n};\n\n/*\n    编辑器构造函数\n*/\n\n// id，累加\nvar editorId = 1;\n\n// 构造函数\nfunction Editor(toolbarSelector, textSelector) {\n    if (toolbarSelector == null) {\n        // 没有传入任何参数，报错\n        throw new Error('错误：初始化编辑器时候未传入任何参数，请查阅文档');\n    }\n    // id，用以区分单个页面不同的编辑器对象\n    this.id = 'wangEditor-' + editorId++;\n\n    this.toolbarSelector = toolbarSelector;\n    this.textSelector = textSelector;\n\n    // 自定义配置\n    this.customConfig = {};\n}\n\n// 修改原型\nEditor.prototype = {\n    constructor: Editor,\n\n    // 初始化配置\n    _initConfig: function _initConfig() {\n        // _config 是默认配置，this.customConfig 是用户自定义配置，将它们 merge 之后再赋值\n        var target = {};\n        this.config = Object.assign(target, config, this.customConfig);\n\n        // 将语言配置，生成正则表达式\n        var langConfig = this.config.lang || {};\n        var langArgs = [];\n        objForEach(langConfig, function (key, val) {\n            // key 即需要生成正则表达式的规则，如“插入链接”\n            // val 即需要被替换成的语言，如“insert link”\n            langArgs.push({\n                reg: new RegExp(key, 'img'),\n                val: val\n\n            });\n        });\n        this.config.langArgs = langArgs;\n    },\n\n    // 初始化 DOM\n    _initDom: function _initDom() {\n        var _this = this;\n\n        var toolbarSelector = this.toolbarSelector;\n        var $toolbarSelector = $(toolbarSelector);\n        var textSelector = this.textSelector;\n\n        var config$$1 = this.config;\n        var zIndex = config$$1.zIndex;\n\n        // 定义变量\n        var $toolbarElem = void 0,\n            $textContainerElem = void 0,\n            $textElem = void 0,\n            $children = void 0;\n\n        if (textSelector == null) {\n            // 只传入一个参数，即是容器的选择器或元素，toolbar 和 text 的元素自行创建\n            $toolbarElem = $('<div></div>');\n            $textContainerElem = $('<div></div>');\n\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $toolbarSelector.children();\n\n            // 添加到 DOM 结构中\n            $toolbarSelector.append($toolbarElem).append($textContainerElem);\n\n            // 自行创建的，需要配置默认的样式\n            $toolbarElem.css('background-color', '#f1f1f1').css('border', '1px solid #ccc');\n            $textContainerElem.css('border', '1px solid #ccc').css('border-top', 'none').css('height', '300px');\n        } else {\n            // toolbar 和 text 的选择器都有值，记录属性\n            $toolbarElem = $toolbarSelector;\n            $textContainerElem = $(textSelector);\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $textContainerElem.children();\n        }\n\n        // 编辑区域\n        $textElem = $('<div></div>');\n        $textElem.attr('contenteditable', 'true').css('width', '100%').css('height', '100%');\n\n        // 初始化编辑区域内容\n        if ($children && $children.length) {\n            $textElem.append($children);\n        } else {\n            $textElem.append($('<p><br></p>'));\n        }\n\n        // 编辑区域加入DOM\n        $textContainerElem.append($textElem);\n\n        // 设置通用的 class\n        $toolbarElem.addClass('w-e-toolbar');\n        $textContainerElem.addClass('w-e-text-container');\n        $textContainerElem.css('z-index', zIndex);\n        $textElem.addClass('w-e-text');\n\n        // 添加 ID\n        var toolbarElemId = getRandom('toolbar-elem');\n        $toolbarElem.attr('id', toolbarElemId);\n        var textElemId = getRandom('text-elem');\n        $textElem.attr('id', textElemId);\n\n        // 记录属性\n        this.$toolbarElem = $toolbarElem;\n        this.$textContainerElem = $textContainerElem;\n        this.$textElem = $textElem;\n        this.toolbarElemId = toolbarElemId;\n        this.textElemId = textElemId;\n\n        // 记录输入法的开始和结束\n        var compositionEnd = true;\n        $textContainerElem.on('compositionstart', function () {\n            // 输入法开始输入\n            compositionEnd = false;\n        });\n        $textContainerElem.on('compositionend', function () {\n            // 输入法结束输入\n            compositionEnd = true;\n        });\n\n        // 绑定 onchange\n        $textContainerElem.on('click keyup', function () {\n            // 输入法结束才出发 onchange\n            compositionEnd && _this.change && _this.change();\n        });\n        $toolbarElem.on('click', function () {\n            this.change && this.change();\n        });\n\n        //绑定 onfocus 与 onblur 事件\n        if (config$$1.onfocus || config$$1.onblur) {\n            // 当前编辑器是否是焦点状态\n            this.isFocus = false;\n\n            $(document).on('click', function (e) {\n                //判断当前点击元素是否在编辑器内\n                var isChild = $textElem.isContain($(e.target));\n\n                //判断当前点击元素是否为工具栏\n                var isToolbar = $toolbarElem.isContain($(e.target));\n                var isMenu = $toolbarElem[0] == e.target ? true : false;\n\n                if (!isChild) {\n                    //若为选择工具栏中的功能，则不视为成blur操作\n                    if (isToolbar && !isMenu) {\n                        return;\n                    }\n\n                    if (_this.isFocus) {\n                        _this.onblur && _this.onblur();\n                    }\n                    _this.isFocus = false;\n                } else {\n                    if (!_this.isFocus) {\n                        _this.onfocus && _this.onfocus();\n                    }\n                    _this.isFocus = true;\n                }\n            });\n        }\n    },\n\n    // 封装 command\n    _initCommand: function _initCommand() {\n        this.cmd = new Command(this);\n    },\n\n    // 封装 selection range API\n    _initSelectionAPI: function _initSelectionAPI() {\n        this.selection = new API(this);\n    },\n\n    // 添加图片上传\n    _initUploadImg: function _initUploadImg() {\n        this.uploadImg = new UploadImg(this);\n    },\n\n    // 初始化菜单\n    _initMenus: function _initMenus() {\n        this.menus = new Menus(this);\n        this.menus.init();\n    },\n\n    // 添加 text 区域\n    _initText: function _initText() {\n        this.txt = new Text(this);\n        this.txt.init();\n    },\n\n    // 初始化选区，将光标定位到内容尾部\n    initSelection: function initSelection(newLine) {\n        var $textElem = this.$textElem;\n        var $children = $textElem.children();\n        if (!$children.length) {\n            // 如果编辑器区域无内容，添加一个空行，重新设置选区\n            $textElem.append($('<p><br></p>'));\n            this.initSelection();\n            return;\n        }\n\n        var $last = $children.last();\n\n        if (newLine) {\n            // 新增一个空行\n            var html = $last.html().toLowerCase();\n            var nodeName = $last.getNodeName();\n            if (html !== '<br>' && html !== '<br\\/>' || nodeName !== 'P') {\n                // 最后一个元素不是 <p><br></p>，添加一个空行，重新设置选区\n                $textElem.append($('<p><br></p>'));\n                this.initSelection();\n                return;\n            }\n        }\n\n        this.selection.createRangeByElem($last, false, true);\n        this.selection.restoreSelection();\n    },\n\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n        // -------- 绑定 onchange 事件 --------\n        var onChangeTimeoutId = 0;\n        var beforeChangeHtml = this.txt.html();\n        var config$$1 = this.config;\n\n        // onchange 触发延迟时间\n        var onchangeTimeout = config$$1.onchangeTimeout;\n        onchangeTimeout = parseInt(onchangeTimeout, 10);\n        if (!onchangeTimeout || onchangeTimeout <= 0) {\n            onchangeTimeout = 200;\n        }\n\n        var onchange = config$$1.onchange;\n        if (onchange && typeof onchange === 'function') {\n            // 触发 change 的有三个场景：\n            // 1. $textContainerElem.on('click keyup')\n            // 2. $toolbarElem.on('click')\n            // 3. editor.cmd.do()\n            this.change = function () {\n                // 判断是否有变化\n                var currentHtml = this.txt.html();\n\n                if (currentHtml.length === beforeChangeHtml.length) {\n                    // 需要比较每一个字符\n                    if (currentHtml === beforeChangeHtml) {\n                        return;\n                    }\n                }\n\n                // 执行，使用节流\n                if (onChangeTimeoutId) {\n                    clearTimeout(onChangeTimeoutId);\n                }\n                onChangeTimeoutId = setTimeout(function () {\n                    // 触发配置的 onchange 函数\n                    onchange(currentHtml);\n                    beforeChangeHtml = currentHtml;\n                }, onchangeTimeout);\n            };\n        }\n\n        // -------- 绑定 onblur 事件 --------\n        var onblur = config$$1.onblur;\n        if (onblur && typeof onblur === 'function') {\n            this.onblur = function () {\n                var currentHtml = this.txt.html();\n                onblur(currentHtml);\n            };\n        }\n\n        // -------- 绑定 onfocus 事件 --------\n        var onfocus = config$$1.onfocus;\n        if (onfocus && typeof onfocus === 'function') {\n            this.onfocus = function () {\n                onfocus();\n            };\n        }\n    },\n\n    // 创建编辑器\n    create: function create() {\n        // 初始化配置信息\n        this._initConfig();\n\n        // 初始化 DOM\n        this._initDom();\n\n        // 封装 command API\n        this._initCommand();\n\n        // 封装 selection range API\n        this._initSelectionAPI();\n\n        // 添加 text\n        this._initText();\n\n        // 初始化菜单\n        this._initMenus();\n\n        // 添加 图片上传\n        this._initUploadImg();\n\n        // 初始化选区，将光标定位到内容尾部\n        this.initSelection(true);\n\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 解绑所有事件（暂时不对外开放）\n    _offAllEvent: function _offAllEvent() {\n        $.offAll();\n    }\n};\n\n// 检验是否浏览器环境\ntry {\n    document;\n} catch (ex) {\n    throw new Error('请在浏览器环境下运行');\n}\n\n// polyfill\npolyfill();\n\n// 这里的 `inlinecss` 将被替换成 css 代码的内容，详情可去 ./gulpfile.js 中搜索 `inlinecss` 关键字\nvar inlinecss = '.w-e-toolbar,.w-e-text-container,.w-e-menu-panel {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-toolbar *,.w-e-text-container *,.w-e-menu-panel * {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-clear-fix:after {  content: \"\";  display: table;  clear: both;}.w-e-toolbar .w-e-droplist {  position: absolute;  left: 0;  top: 0;  background-color: #fff;  border: 1px solid #f1f1f1;  border-right-color: #ccc;  border-bottom-color: #ccc;}.w-e-toolbar .w-e-droplist .w-e-dp-title {  text-align: center;  color: #999;  line-height: 2;  border-bottom: 1px solid #f1f1f1;  font-size: 13px;}.w-e-toolbar .w-e-droplist ul.w-e-list {  list-style: none;  line-height: 1;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item {  color: #333;  padding: 5px 0;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item:hover {  background-color: #f1f1f1;}.w-e-toolbar .w-e-droplist ul.w-e-block {  list-style: none;  text-align: left;  padding: 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item {  display: inline-block;  *display: inline;  *zoom: 1;  padding: 3px 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item:hover {  background-color: #f1f1f1;}@font-face {  font-family: \\'w-e-icon\\';  src: url(data:application/x-font-woff;charset=utf-8;base64,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) format(\\'truetype\\');  font-weight: normal;  font-style: normal;}[class^=\"w-e-icon-\"],[class*=\" w-e-icon-\"] {  /* use !important to prevent issues with browser extensions that change fonts */  font-family: \\'w-e-icon\\' !important;  speak: none;  font-style: normal;  font-weight: normal;  font-variant: normal;  text-transform: none;  line-height: 1;  /* Better Font Rendering =========== */  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}.w-e-icon-close:before {  content: \"\\\\f00d\";}.w-e-icon-upload2:before {  content: \"\\\\e9c6\";}.w-e-icon-trash-o:before {  content: \"\\\\f014\";}.w-e-icon-header:before {  content: \"\\\\f1dc\";}.w-e-icon-pencil2:before {  content: \"\\\\e906\";}.w-e-icon-paint-brush:before {  content: \"\\\\f1fc\";}.w-e-icon-image:before {  content: \"\\\\e90d\";}.w-e-icon-play:before {  content: \"\\\\e912\";}.w-e-icon-location:before {  content: \"\\\\e947\";}.w-e-icon-undo:before {  content: \"\\\\e965\";}.w-e-icon-redo:before {  content: \"\\\\e966\";}.w-e-icon-quotes-left:before {  content: \"\\\\e977\";}.w-e-icon-list-numbered:before {  content: \"\\\\e9b9\";}.w-e-icon-list2:before {  content: \"\\\\e9bb\";}.w-e-icon-link:before {  content: \"\\\\e9cb\";}.w-e-icon-happy:before {  content: \"\\\\e9df\";}.w-e-icon-bold:before {  content: \"\\\\ea62\";}.w-e-icon-underline:before {  content: \"\\\\ea63\";}.w-e-icon-italic:before {  content: \"\\\\ea64\";}.w-e-icon-strikethrough:before {  content: \"\\\\ea65\";}.w-e-icon-table2:before {  content: \"\\\\ea71\";}.w-e-icon-paragraph-left:before {  content: \"\\\\ea77\";}.w-e-icon-paragraph-center:before {  content: \"\\\\ea78\";}.w-e-icon-paragraph-right:before {  content: \"\\\\ea79\";}.w-e-icon-terminal:before {  content: \"\\\\f120\";}.w-e-icon-page-break:before {  content: \"\\\\ea68\";}.w-e-icon-cancel-circle:before {  content: \"\\\\ea0d\";}.w-e-icon-font:before {  content: \"\\\\ea5c\";}.w-e-icon-text-heigh:before {  content: \"\\\\ea5f\";}.w-e-toolbar {  display: -webkit-box;  display: -ms-flexbox;  display: flex;  padding: 0 5px;  /* flex-wrap: wrap; */  /* 单个菜单 */}.w-e-toolbar .w-e-menu {  position: relative;  text-align: center;  padding: 5px 10px;  cursor: pointer;}.w-e-toolbar .w-e-menu i {  color: #999;}.w-e-toolbar .w-e-menu:hover i {  color: #333;}.w-e-toolbar .w-e-active i {  color: #1e88e5;}.w-e-toolbar .w-e-active:hover i {  color: #1e88e5;}.w-e-text-container .w-e-panel-container {  position: absolute;  top: 0;  left: 50%;  border: 1px solid #ccc;  border-top: 0;  box-shadow: 1px 1px 2px #ccc;  color: #333;  background-color: #fff;  /* 为 emotion panel 定制的样式 */  /* 上传图片的 panel 定制样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-close {  position: absolute;  right: 0;  top: 0;  padding: 5px;  margin: 2px 5px 0 0;  cursor: pointer;  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-close:hover {  color: #333;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title {  list-style: none;  display: -webkit-box;  display: -ms-flexbox;  display: flex;  font-size: 14px;  margin: 2px 10px 0 10px;  border-bottom: 1px solid #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-item {  padding: 3px 5px;  color: #999;  cursor: pointer;  margin: 0 3px;  position: relative;  top: 1px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-active {  color: #333;  border-bottom: 1px solid #333;  cursor: default;  font-weight: 700;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content {  padding: 10px 15px 10px 15px;  font-size: 16px;  /* 输入框的样式 */  /* 按钮的样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content button:focus {  outline: none;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea {  width: 100%;  border: 1px solid #ccc;  padding: 5px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus {  border-color: #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text] {  border: none;  border-bottom: 1px solid #ccc;  font-size: 14px;  height: 20px;  color: #333;  text-align: left;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].small {  width: 30px;  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].block {  display: block;  width: 100%;  margin: 10px 0;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text]:focus {  border-bottom: 2px solid #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button {  font-size: 14px;  color: #1e88e5;  border: none;  padding: 5px 10px;  background-color: #fff;  cursor: pointer;  border-radius: 3px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.left {  float: left;  margin-right: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.right {  float: right;  margin-left: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.gray {  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.red {  color: #c24f4a;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button:hover {  background-color: #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container:after {  content: \"\";  display: table;  clear: both;}.w-e-text-container .w-e-panel-container .w-e-emoticon-container .w-e-item {  cursor: pointer;  font-size: 18px;  padding: 0 3px;  display: inline-block;  *display: inline;  *zoom: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container {  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn {  display: inline-block;  *display: inline;  *zoom: 1;  color: #999;  cursor: pointer;  font-size: 60px;  line-height: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn:hover {  color: #333;}.w-e-text-container {  position: relative;}.w-e-text-container .w-e-progress {  position: absolute;  background-color: #1e88e5;  bottom: 0;  left: 0;  height: 1px;}.w-e-text {  padding: 0 10px;  overflow-y: scroll;}.w-e-text p,.w-e-text h1,.w-e-text h2,.w-e-text h3,.w-e-text h4,.w-e-text h5,.w-e-text table,.w-e-text pre {  margin: 10px 0;  line-height: 1.5;}.w-e-text ul,.w-e-text ol {  margin: 10px 0 10px 20px;}.w-e-text blockquote {  display: block;  border-left: 8px solid #d0e5f2;  padding: 5px 10px;  margin: 10px 0;  line-height: 1.4;  font-size: 100%;  background-color: #f1f1f1;}.w-e-text code {  display: inline-block;  *display: inline;  *zoom: 1;  background-color: #f1f1f1;  border-radius: 3px;  padding: 3px 5px;  margin: 0 3px;}.w-e-text pre code {  display: block;}.w-e-text table {  border-top: 1px solid #ccc;  border-left: 1px solid #ccc;}.w-e-text table td,.w-e-text table th {  border-bottom: 1px solid #ccc;  border-right: 1px solid #ccc;  padding: 3px 5px;}.w-e-text table th {  border-bottom: 2px solid #ccc;  text-align: center;}.w-e-text:focus {  outline: none;}.w-e-text img {  cursor: pointer;}.w-e-text img:hover {  box-shadow: 0 0 5px #333;}';\n\n// 将 css 代码添加到 <style> 中\nvar style = document.createElement('style');\nstyle.type = 'text/css';\nstyle.innerHTML = inlinecss;\ndocument.getElementsByTagName('HEAD').item(0).appendChild(style);\n\n// 返回\nvar index = window.wangEditor || Editor;\n\nreturn index;\n\n})));\n"],"sourceRoot":""}